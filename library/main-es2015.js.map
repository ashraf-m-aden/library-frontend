{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/book-dashboard/add-book/add-book.component.html","./src/app/book-dashboard/add-book/dialog-overview-example-dialog.html","./src/app/book-dashboard/book-dashboard.component.html","./src/app/book-dashboard/book/book.component.html","./src/app/book-dashboard/borrow-book/borrow-book.component.html","./src/app/book-dashboard/borrowed-book/borrowed-book.component.html","./src/app/book-dashboard/livres/livres.component.html","./src/app/dashboard/dashboard.component.html","./src/app/gestion/genre/genre.component.html","./src/app/header/header.component.html","./src/app/login/login.component.html","./src/app/messages/messages/messages.component.html","./src/app/messages/single-message/single-message.component.html","./src/app/notifications/notifications.component.html","./src/app/statistic/global-stats/global-stats.component.html","./src/app/users/add-user/add-user.component.html","./src/app/users/add-user/dialog-overview-example-dialog.html","./src/app/users/client/client.component.html","./src/app/users/clients/clients.component.html","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/book-dashboard/add-book/add-book.component.scss","./src/app/book-dashboard/add-book/add-book.component.ts","./src/app/book-dashboard/book-dashboard.component.scss","./src/app/book-dashboard/book-dashboard.component.ts","./src/app/book-dashboard/book/book.component.scss","./src/app/book-dashboard/book/book.component.ts","./src/app/book-dashboard/borrow-book/borrow-book.component.scss","./src/app/book-dashboard/borrow-book/borrow-book.component.ts","./src/app/book-dashboard/borrowed-book/borrowed-book.component.scss","./src/app/book-dashboard/borrowed-book/borrowed-book.component.ts","./src/app/book-dashboard/livres/livres.component.scss","./src/app/book-dashboard/livres/livres.component.ts","./src/app/dashboard/dashboard.component.scss","./src/app/dashboard/dashboard.component.ts","./src/app/gestion/genre/genre.component.scss","./src/app/gestion/genre/genre.component.ts","./src/app/gestion/gestion.module.ts","./src/app/gestion/gestion.routing.module.ts","./src/app/header/header.component.scss","./src/app/header/header.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/messages/messages/messages.component.scss","./src/app/messages/messages/messages.component.ts","./src/app/messages/single-message/single-message.component.scss","./src/app/messages/single-message/single-message.component.ts","./src/app/notifications/notifications.component.scss","./src/app/notifications/notifications.component.ts","./src/app/services/auth.service.ts","./src/app/services/books.service.ts","./src/app/services/clients.service.ts","./src/app/services/guards/auth-guard-deconnected.service.ts","./src/app/services/guards/auth-guard.service.ts","./src/app/services/notifications.service.ts","./src/app/statistic/global-stats/global-stats.component.scss","./src/app/statistic/global-stats/global-stats.component.ts","./src/app/users/add-user/add-user.component.scss","./src/app/users/add-user/add-user.component.ts","./src/app/users/client/client.component.scss","./src/app/users/client/client.component.ts","./src/app/users/clients/clients.component.scss","./src/app/users/clients/clients.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \" <div id=\\\"content\\\" class=\\\"container-fluid\\\">\\n<app-header></app-header>\\n  <router-outlet></router-outlet>\\n\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <div class=\\\"card\\\">\\n      <h4 class=\\\"card-title card-header bg-dark text-light\\\">\\n        Ajouter un livre\\n      </h4>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <div class=\\\"card\\\">\\n      <form [formGroup]=\\\"bookForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 form-group\\\">\\n            <mat-form-field>\\n              <input matInput formControlName=\\\"title\\\" placeholder=\\\"Titre\\\" />\\n            </mat-form-field>\\n\\n          </div>\\n          <div class=\\\"col-md-4 form-group\\\">\\n            <mat-form-field>\\n              <input matInput formControlName=\\\"author\\\" placeholder=\\\"Auteur\\\" />\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 form-group\\\">\\n            <mat-form-field>\\n              <input matInput formControlName=\\\"year\\\" placeholder=\\\"Année\\\" type=\\\"number\\\" />\\n            </mat-form-field>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12 form-group\\\">\\n            <label>Genre</label>\\n            <mat-form-field>\\n              <mat-select matInput formControlName=\\\"genre\\\" name=\\\"Genre\\\" id=\\\"genre\\\">\\n                <mat-option *ngFor=\\\"let genre of genres\\\" [value]=\\\"genre.id\\\">{{\\n                  genre.name\\n                }}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <!-- <div class=\\\"form-group\\\" id=\\\"pic\\\">\\n              <label for=\\\"file\\\" class=\\\"disappear\\\">Ajouter une photo</label>\\n              <input type=\\\"file\\\" class=\\\"disappear\\\" (change)=\\\"upload($event)\\\" accept=\\\".png,.jpg\\\" />\\n            </div> -->\\n            <br>\\n            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\" [disabled]=\\\"bookForm.invalid\\\"\\n              class=\\\" center\\\">\\n              Ajouter le livre\\n            </button>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<h4 mat-dialog-title>Notification</h4>\\n<div mat-dialog-content>\\n  <p>Etes vous sûr d'enregistrer {{data.title}} ?</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">Annuler</button>\\n  <button mat-button (click)=\\\"save()\\\" cdkFocusInitial>Enregistrer</button>\\n</div>\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-2 card bg-dark text-light\\\" style=\\\"margin-top: 10px;\\\">\\n    <h5 type=\\\"button\\\" class=\\\"card-header\\\" (click)=\\\"displayAll()\\\">\\n      Tous les livres\\n    </h5>\\n    <div class=\\\"dropdown-divider\\\"></div>\\n    <ul class=\\\"list-group\\\">\\n      <li\\n        type=\\\"button\\\"\\n        class=\\\" list-group-item bg-dark btn-outline-danger text-light\\\"\\n        *ngFor=\\\"let genre of genres\\\"\\n        (click)=\\\"display(genre.id)\\\"\\n      >\\n        {{ genre.name }}\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-10\\\">\\n    <div *ngIf=\\\"allBooks\\\" class=\\\"row\\\">\\n      <div class=\\\"col-sm-12 col-md-12\\\">\\n        <div class=\\\"card\\\">\\n          <h4 class=\\\"card-header bg-dark text-light\\\">Livres</h4>\\n          <div class=\\\"card-body menuB\\\">\\n            <button\\n              class=\\\"btn  mat-raised-button btn-success \\\"\\n              routerLink=\\\"/addBook\\\"\\n            >\\n              Ajouter un livre\\n            </button>\\n            <button\\n              class=\\\"btn  mat-raised-button btn-outline-danger\\\"\\n              routerLink=\\\"/borrowedBook\\\"\\n            >\\n              Livres empreintés\\n            </button>\\n          </div>\\n          <form class=\\\"form-check-inline card-body\\\" [formGroup]=\\\"searchForm\\\">\\n            <input\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"letter\\\"\\n              type=\\\"text\\\"\\n              placeholder=\\\"Rechercher un livre\\\"\\n              aria-label=\\\"Rechercher\\\"\\n            />\\n            <button\\n              class=\\\"btn btn-outline-success\\\"\\n              type=\\\"submit\\\"\\n              [disabled]=\\\"searchForm.invalid\\\"\\n              (click)=\\\"search()\\\"\\n            >\\n              Rechercher\\n            </button>\\n            <button\\n              class=\\\"btn btn-outline-danger\\\"\\n              [disabled]=\\\"searchForm.invalid\\\"\\n              (click)=\\\"initForm()\\\"\\n            >\\n              Effacer\\n            </button>\\n          </form>\\n          <button class=\\\"btn btn-group btn-danger\\\" *ngIf=\\\"errorMessage && !searchResults\\\">\\n            Aucun livre trouvé\\n          </button>\\n          <div *ngIf=\\\"searchResults\\\">\\n            <table class=\\\"table table-striped\\\">\\n              <thead>\\n                <tr>\\n                  <th scope=\\\"col\\\">#</th>\\n                  <th scope=\\\"col\\\">Nom</th>\\n                  <th scope=\\\"col\\\">Action</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let book of Books; let i = index\\\">\\n                  <td>{{ i + 1 }}</td>\\n                  <td>{{ book.title }}</td>\\n                  <td>\\n                    <button\\n                      (click)=\\\"details(book.idBook)\\\"\\n                      class=\\\"btn btn-group btn-outline-primary\\\"\\n                    >\\n                      Consulter\\n                    </button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div class=\\\"col-sm-12 col-md-12\\\" *ngIf=\\\"search\\\">\\n            <mat-paginator\\n              [length]=\\\"length\\\"\\n              [pageSize]=\\\"pageSize\\\"\\n              [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n              showFirstLastButtons\\n            >\\n            </mat-paginator>\\n            <div class=\\\"example-container mat-elevation-z8\\\">\\n              <mat-table [dataSource]=\\\"datasource\\\" matSort>\\n                <!-- ID Column -->\\n                <ng-container matColumnDef=\\\"title\\\">\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\\n                    Titre\\n                  </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{ row.title }} </mat-cell>\\n                </ng-container>\\n\\n                <!-- Progress Column -->\\n                <ng-container matColumnDef=\\\"author\\\">\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\\n                    Auteur\\n                  </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{ row.author }} </mat-cell>\\n                </ng-container>\\n\\n                <!-- Name Column -->\\n                <ng-container matColumnDef=\\\"genre\\\">\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\\n                    Genre\\n                  </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{ row.genre.name }} </mat-cell>\\n                </ng-container>\\n                <!-- action Column -->\\n                <ng-container matColumnDef=\\\"Action\\\">\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\\n                    Action\\n                  </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\" class=\\\"d-flex justify-content-around\\\">\\n                    <button\\n                      [routerLink]=\\\"['/book', row.id]\\\"\\n                      class=\\\"btn btn-outline-info small p-2\\\"\\n                    >\\n                      Check\\n                    </button>\\n                    <button\\n                 (click)=\\\"delete(row.id)\\\"\\n                    class=\\\"btn btn-danger small p-2\\\"\\n                  >\\n                    Delete\\n                  </button>\\n                  </mat-cell>\\n                </ng-container>\\n\\n                <mat-header-row\\n                  *matHeaderRowDef=\\\"displayedColumns\\\"\\n                ></mat-header-row>\\n                <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\">\\n                </mat-row>\\n              </mat-table>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <app-livres *ngIf=\\\"specificBooks\\\" [genreId]=\\\"bookGenreId\\\"></app-livres>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12 col-md-4\\\">\\r\\n    <div class=\\\"card card-profile\\\">\\r\\n      <div class=\\\"card-avatar imgWrapper\\\">\\r\\n        <img class=\\\"imgCarousel\\\" [src]=\\\"book?.image\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h6 class=\\\"card-category text-gray\\\">{{ book?.idCDC }} -- Status: <span *ngIf=\\\"book?.disponible == 1\\\" class=\\\"text-success\\\">Disponible</span>\\r\\n            <span class=\\\"text-danger\\\" *ngIf=\\\"book?.disponible !==1\\\">Non disponible</span></h6>\\r\\n        <h4 class=\\\"card-title\\\">{{ book?.title }}</h4>\\r\\n        Auteur: {{ book?.author }} <br />\\r\\n        Année: {{ book?.year }} <br />\\r\\n        Genre: {{ book?.genre.name }}<br />\\r\\n\\r\\n        <a *ngIf=\\\"book?.disponible\\\"\\r\\n          class=\\\"btn btn-danger btn-round\\\"\\r\\n          (click)=\\\"borrow = true\\\"\\r\\n          >Preter</a\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-12 col-md-8\\\">\\r\\n    <mat-toolbar>\\r\\n      Historique du Livre\\r\\n    </mat-toolbar>\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n      <thead>\\r\\n        <tr class=\\\" small\\\">\\r\\n          <th scope=\\\"col\\\">#</th>\\r\\n          <th scope=\\\"col\\\">Empreinté par</th>\\r\\n          <th scope=\\\"col\\\">Date d'empeint</th>\\r\\n          <th scope=\\\"col\\\">Date de retour</th>\\r\\n          <th scope=\\\"col\\\">Preté par</th>\\r\\n          <th scope=\\\"col\\\">Rendu</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let pret of prets; let i = index\\\" class=\\\"small\\\">\\r\\n          <td>{{ i + 1 }}</td>\\r\\n          <td>{{ pret?.client.firstName }} {{ pret?.client.lastName }}</td>\\r\\n          <td>{{ pret?.borrowDate }}</td>\\r\\n          <td>{{ pret?.returnDate }}</td>\\r\\n          <td>{{ pret?.user.username }}</td>\\r\\n          <td *ngIf=\\\"pret?.returned === 1\\\" class=\\\" bg-success text-light\\\">Oui</td>\\r\\n          <td *ngIf=\\\"pret?.returned === 0\\\" class=\\\" bg-danger text-light\\\">Non</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <app-borrow-book *ngIf=\\\"borrow\\\" [book]=\\\"book\\\" (borrowed)=\\\"borrow = false;\\\"></app-borrow-book>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"col-md-12\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header card-header-danger\\\">\\n      <p class=\\\"card-category\\\">Enregistrer un empreint</p>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <form [formGroup]=\\\"borrowForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <form [formGroup]=\\\"searchForm\\\">\\n              <input\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"letter\\\"\\n                type=\\\"text\\\"\\n                placeholder=\\\"Rechercher un abonné\\\"\\n                aria-label=\\\"Rechercher\\\"\\n              />\\n              <button\\n                class=\\\"btn btn-outline-success\\\"\\n                type=\\\"submit\\\"\\n                [disabled]=\\\"searchForm.invalid\\\"\\n                (click)=\\\"search()\\\"\\n              >\\n                Rechercher\\n              </button>\\n              <button\\n                class=\\\"btn btn-outline-danger\\\"\\n                [disabled]=\\\"searchForm.invalid\\\"\\n                (click)=\\\"initsearchForm()\\\"\\n              >\\n                Effacer\\n              </button>\\n            </form>\\n            <div *ngIf=\\\"searchResults\\\">\\n              <table class=\\\"table table-striped\\\">\\n                <thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\">#</th>\\n                    <th scope=\\\"col\\\">Prenom</th>\\n                    <th scope=\\\"col\\\">Nom</th>\\n                    <th scope=\\\"col\\\">Action</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let user of Users; let i = index\\\">\\n                    <td>{{ i + 1 }}</td>\\n                    <td>{{ user.firstName }}</td>\\n                    <td>{{ user.lastName }}</td>\\n                    <td>\\n                      <button\\n                        (click)=\\\"choose(user)\\\"\\n                        class=\\\"btn btn-group btn-outline-primary\\\"\\n                      >\\n                        Choisir\\n                      </button>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n            <div *ngIf=\\\"selected\\\">\\n              <table class=\\\"table table-striped\\\">\\n                <thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\">#</th>\\n                    <th scope=\\\"col\\\">Prenom</th>\\n                    <th scope=\\\"col\\\">Nom</th>\\n                    <th scope=\\\"col\\\">Action</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>1</td>\\n                    <td>{{ choosenUser?.firstName }}</td>\\n                    <td>{{ choosenUser?.lastName }}</td>\\n                    <td>\\n                      <button (click)=\\\"resetUser()\\\">Reset</button>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n            <button class=\\\"btn btn-group btn-danger\\\" *ngIf=\\\"errorMessage\\\">\\n              Cet utilisateur n'existe pas\\n            </button>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"form-group\\\">\\n                <input\\n                  matInput\\n                  placeholder=\\\"Choisir la date de retour\\\"\\n                  [matDatepicker]=\\\"picker\\\"\\n                  formControlName=\\\"returnDate\\\"\\n                  matInput\\n                  [min]=\\\"minDate\\\"\\n                  [max]=\\\"maxDate\\\"\\n                  readonly\\n                />\\n                <mat-datepicker-toggle\\n                  matSuffix\\n                  [for]=\\\"picker\\\"\\n                ></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n              </mat-form-field>\\n              <button class=\\\"btn btn-group btn-danger\\\" *ngIf=\\\"errorDate\\\">\\n                Date incorrect\\n              </button>\\n            </div>\\n\\n            <button\\n              mat-raised-button\\n              type=\\\"submit\\\"\\n              class=\\\"btn btn-danger pull-right\\\"\\n              [disabled]=\\\"borrowForm.invalid\\\"\\n            >\\n              Confirmer l'empreint\\n            </button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8\\\">\\n    <div class=\\\"card\\\">\\n      <h4 class=\\\"card-header bg-dark text-light\\\">Recherche de livres</h4>\\n\\n  <form [formGroup]=\\\"searchForm\\\" class=\\\" card-body form-check-inline\\\">\\n    <input\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"letter\\\"\\n      type=\\\"text\\\"\\n      placeholder=\\\"Rechercher un livre preté\\\"\\n      aria-label=\\\"Rechercher\\\"\\n    />\\n    <button\\n      class=\\\"btn btn-outline-success\\\"\\n      type=\\\"submit\\\"\\n      [disabled]=\\\"searchForm.invalid\\\"\\n      (click)=\\\"search()\\\"\\n    >\\n      Rechercher\\n    </button>\\n    <button\\n      class=\\\"btn btn-outline-danger\\\"\\n      [disabled]=\\\"searchForm.invalid\\\"\\n      (click)=\\\"initsearchForm()\\\"\\n    >\\n      Effacer\\n    </button>\\n  </form>\\n  <button class=\\\"btn btn-group btn-danger\\\" *ngIf=\\\"errorMessage\\\">Aucun livre trouvé</button>\\n</div>\\n  <table class=\\\"table table-striped\\\" *ngIf=\\\"searchResults\\\">\\n    <thead>\\n      <tr class=\\\" small\\\">\\n        <th scope=\\\"col\\\">#</th>\\n        <th scope=\\\"col\\\">Titre</th>\\n        <th scope=\\\"col\\\">Genre</th>\\n        <th scope=\\\"col\\\">Empreinté par</th>\\n        <th scope=\\\"col\\\">Date d'empeint</th>\\n        <th scope=\\\"col\\\">Date de retour</th>\\n        <th scope=\\\"col\\\">Preté par</th>\\n        <th scope=\\\"col\\\">Rendu</th>\\n        <th scope=\\\"col\\\">Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let pret of searchPrets; let i = index\\\" class=\\\"small\\\">\\n\\n        <td>{{ i + 1 }}</td>\\n        <td>{{ pret?.book?.title }}</td>\\n        <td>{{ pret?.book?.genre?.name }}</td>\\n        <td>{{ pret?.client?.firstName }}</td>\\n        <td>{{ pret?.borrowDate }}</td>\\n        <td>{{ pret?.returnDate }}</td>\\n        <td>{{ pret?.user?.username }}</td>\\n        <td *ngIf=\\\"pret?.rendu\\\">Oui</td>\\n        <td *ngIf=\\\"!pret?.rendu\\\">Non</td>\\n        <td class=\\\"d-flex flex-row\\\">\\n          <button class=\\\"btn btn-group  btn-success\\\" *ngIf=\\\"pret?.returned === 0\\\" (click)=\\\"rendu(pret)\\\">Rendu</button>\\n          <button  class=\\\"btn btn-group  btn-danger\\\" *ngIf=\\\"pret?.returned === 0\\\" (click)=\\\"notifier()\\\">Notifier</button>\\n          <button  class=\\\"btn btn-group  btn-info\\\" *ngIf=\\\"pret?.returned === 1\\\" (click)=\\\"check(pret?.book?.id)\\\">Check</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n  </div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8\\\">\\n    <h4 class=\\\"card-header\\\">Tous les livres empreintés</h4>\\n\\n    <table class=\\\"table table-striped\\\">\\n      <thead>\\n        <tr class=\\\" small\\\">\\n          <th scope=\\\"col\\\">#</th>\\n          <th scope=\\\"col\\\">Titre</th>\\n          <th scope=\\\"col\\\">Genre</th>\\n          <th scope=\\\"col\\\">Empreinté par</th>\\n          <th scope=\\\"col\\\">Date d'empeint</th>\\n          <th scope=\\\"col\\\">Date de retour</th>\\n          <th scope=\\\"col\\\">Preté par</th>\\n          <th scope=\\\"col\\\">Rendu</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let pret of Prets; let i = index\\\" class=\\\"small\\\">\\n          <td>{{ i + 1 }}</td>\\n          <td>{{ pret?.book?.title }}</td>\\n          <td>{{ pret?.book?.genre?.name }}</td>\\n          <td>{{ pret?.client?.firstName }}</td>\\n          <td>{{ pret?.borrowDate }}</td>\\n          <td>{{ pret?.returnDate }}</td>\\n          <td>{{ pret?.user?.username }}</td>\\n          <td *ngIf=\\\"pret?.returned === 1\\\">Oui</td>\\n          <td *ngIf=\\\"pret?.returned === 0\\\">Non</td>\\n\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <div class=\\\"card\\\">\\n      <mat-paginator\\n        [length]=\\\"length\\\"\\n        [pageSize]=\\\"pageSize\\\"\\n        [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n        showFirstLastButtons\\n      >\\n      </mat-paginator>\\n      <div class=\\\"example-container mat-elevation-z8 card-body\\\">\\n        <mat-table [dataSource]=\\\"datasource\\\" matSort>\\n          <!-- ID Column -->\\n          <ng-container matColumnDef=\\\"title\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Nom\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.title }} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Progress Column -->\\n          <ng-container matColumnDef=\\\"author\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Auteur\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.author }} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"year\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Année\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.year }} </mat-cell>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"Action\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Action\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">\\n              <button\\n                [routerLink]=\\\"['/book', row.id]\\\"\\n                class=\\\"btn btn-outline-info\\\"\\n              >\\n                Consulter\\n              </button>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"> </mat-row>\\n        </mat-table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"dashboard\\\">\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"isAuth\\\">\\r\\n    <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n      <div class=\\\"card card-stats border-success\\\">\\r\\n        <div class=\\\"card-body d-flex justify-content-between border-success \\\">\\r\\n          <div>\\r\\n            <img src=\\\"../../assets/img/books.png\\\" alt=\\\"\\\" style=\\\"height: 50px;width: 50px;\\\" />\\r\\n          </div>\\r\\n          <div class=\\\" text-right\\\">\\r\\n            <h6 class=\\\" card-subtitle text-secondary\\\">Nombre de livres total</h6>\\r\\n            <h4 class=\\\"card-title\\\">{{bookNumber}}</h4>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer border-success \\\">\\r\\n          <hr class=\\\"border-success\\\" />\\r\\n          <button class=\\\"btn btn-group mat-raised-button btn-success\\\" routerLink=\\\"/bookDashboard\\\">\\r\\n            Consulter\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n      <div class=\\\"card card-stats border-info\\\">\\r\\n        <div class=\\\"card-body d-flex justify-content-between border-info \\\">\\r\\n          <div>\\r\\n            <img src=\\\"../../assets/img/users.png\\\" alt=\\\"\\\" style=\\\"height: 50px;width: 50px;\\\" />\\r\\n          </div>\\r\\n          <div class=\\\" text-right\\\">\\r\\n            <h6 class=\\\" card-subtitle text-secondary\\\">Nombre d'abonnés</h6>\\r\\n            <h4 class=\\\"card-title\\\">{{clientNumber}}</h4>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer border-info \\\">\\r\\n          <hr class=\\\"border-success\\\" />\\r\\n          <button class=\\\"btn btn-group mat-raised-button btn-info\\\" routerLink=\\\"/clients\\\">\\r\\n            Consulter\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n      <div class=\\\"card card-stats border-success\\\">\\r\\n        <div class=\\\"card-body d-flex justify-content-between border-danger \\\">\\r\\n          <div>\\r\\n            <img src=\\\"../../assets/img/bookabsent.png\\\" alt=\\\"\\\" style=\\\"height: 50px;width: 50px;\\\" />\\r\\n          </div>\\r\\n          <div class=\\\" text-right\\\">\\r\\n            <h6 class=\\\" card-subtitle text-secondary\\\">Livres empreintés</h6>\\r\\n            <h4 class=\\\"card-title\\\">{{borrowBookNumber}}</h4>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer border-danger \\\">\\r\\n          <hr class=\\\"border-danger\\\" />\\r\\n          <button class=\\\"btn btn-group mat-raised-button btn-danger\\\" routerLink=\\\"/borrowedBook\\\">\\r\\n            Consulter\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n      <div class=\\\"card card-stats border-warning\\\">\\r\\n        <div class=\\\"card-body d-flex justify-content-between border-warning \\\">\\r\\n          <div>\\r\\n            <img src=\\\"../../assets/img/cdc.png\\\" alt=\\\"\\\" style=\\\"height: 50px;width: 50px;\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer border-warning \\\">\\r\\n          Connecté en tant que : {{userName}}\\r\\n          <hr class=\\\"border-warning\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 info\\\">\\r\\n      <p>Hello, this is a little application I made to show off my Angular9 and springBoot skills.\\r\\n      </p>\\r\\n<p>It's a debut of a library application. In this little application, you can create new client, new types of books(genres) and then attribute some books to those types.\\r\\n  Client can borrow books and you can register a book as \\\"returned\\\" if the client give it back.</p>\\r\\n\\r\\n<p>For the front-end I used Angular, bootstrap, Angular material and a chart. This app had firebase as a backend before to execute CRUD operations, but i changed it to Spring boot.\\r\\n</p>\\r\\n<p>The back-end now, use spring-rest, spring-data-jpa, hibernate, spring-security and jwt.\\r\\n  But to visit, you have to authenticate first!</p>\\r\\n<table class=\\\"table col-md-3\\\">\\r\\n  <tr>\\r\\n    <td class=\\\"font-weight-bold\\\">username:</td>\\r\\n    <td>ashraf</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td class=\\\"font-weight-bold\\\">password:</td>\\r\\n    <td>spring-boot</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n PS: the app is in French, I hope you don't get lost.\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <div class=\\\"card \\\">\\r\\n        <div class=\\\"card-header \\\">\\r\\n          <h5 class=\\\"card-title\\\">Historiques</h5>\\r\\n          <p class=\\\"card-category\\\">Les dernieres interactions</p>\\r\\n        </div>\\r\\n        <div class=\\\"card-body \\\">\\r\\n          <canvas id=\\\"chartEmail\\\"></canvas>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <div class=\\\"card card-chart\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <h5 class=\\\"card-title\\\">Livres</h5>\\r\\n          <p class=\\\"card-category\\\">Frequence d'empreint des livres</p>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <ngx-charts-line-chart style=\\\"min-width: 100%; height: 100%;\\\" [view]=\\\"view\\\" [scheme]=\\\"colorScheme\\\"\\r\\n            [legend]=\\\"legend\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxis]=\\\"xAxis\\\"\\r\\n            [yAxis]=\\\"yAxis\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\" [timeline]=\\\"timeline\\\" [results]=\\\"multi\\\"\\r\\n            (select)=\\\"onSelect($event)\\\" (activate)=\\\"onActivate($event)\\\" (deactivate)=\\\"onDeactivate($event)\\\">\\r\\n          </ngx-charts-line-chart>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div> -->\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8\\\">\\n    <div class=\\\"card\\\">\\n      <h4 class=\\\"card-header bg-dark text-light\\\">Genre de litteratures</h4>\\n      <form class=\\\"form-check-inline card-body\\\" [formGroup]=\\\"genreForm\\\">\\n        <div class=\\\"row\\\">\\n          <input class=\\\"form-control col-sm-12 col-md-4\\\" formControlName=\\\"name\\\" type=\\\"text\\\"\\n            placeholder=\\\"Nom du genre\\\" />\\n          <textarea class=\\\"form-control col-sm-12 col-md-9\\\" formControlName=\\\"description\\\" type=\\\"text\\\"\\n            placeholder=\\\"Description du genre\\\"></textarea>\\n        </div>\\n        <button class=\\\"btn btn-outline-success\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\">\\n          Ajouter\\n        </button>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-10\\\">\\n    <div class=\\\"card\\\">\\n      <mat-paginator [length]=\\\"length\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\" showFirstLastButtons>\\n      </mat-paginator>\\n      <div class=\\\"example-container mat-elevation-z8 card-body\\\">\\n        <mat-table [dataSource]=\\\"datasource\\\" matSort>\\n          <!-- ID Column -->\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Nom\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.name }} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Progress Column -->\\n          <ng-container matColumnDef=\\\"description\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Description\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.description }} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"Action\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Action\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">\\n              <button class=\\\"btn btn-group btn-danger\\\" (click)=\\\"delete(row.id)\\\">\\n                Supprimer\\n              </button>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"> </mat-row>\\n        </mat-table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">\\n    <img\\n      src=\\\"../../assets/img/logobook.png\\\"\\n      width=\\\"40\\\"\\n      height=\\\"30\\\"\\n      alt=\\\"Site logo\\\"\\n  /></a>\\n  <button\\n    class=\\\"navbar-toggler\\\"\\n    type=\\\"button\\\"\\n    data-toggle=\\\"collapse\\\"\\n    data-target=\\\"#navbarContent\\\"\\n  >\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarContent\\\">\\n    <ul class=\\\"navbar-nav list-inline\\\">\\n      <li class=\\\"nav-item active list-inline-item\\\">\\n        <a class=\\\"nav-link text-light\\\" [routerLink]=\\\"['/dashboard']\\\">Acceuil</a>\\n      </li>\\n      <li class=\\\"nav-item list-inline-item\\\">\\n        <a class=\\\"nav-link text-light\\\" [routerLink]=\\\"['/clients']\\\">Abonnés</a>\\n      </li>\\n      <li class=\\\"nav-item list-inline-item\\\">\\n        <div class=\\\"dropdown\\\">\\n          <a\\n            class=\\\"nav-link text-light\\\"\\n            id=\\\"dropdownMenu2\\\"\\n            data-toggle=\\\"dropdown\\\"\\n            aria-haspopup=\\\"true\\\"\\n            aria-expanded=\\\"false\\\"\\n            >Livres</a\\n          >\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdown\\\">\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/bookDashboard\\\" >Tous les livres</a>\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/addBook\\\">Ajouter un livre</a>\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/borrowedBook\\\">Livres empreintés</a>\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/genre\\\"\\n            >Genre de litteratures</a\\n          >\\n          </div>\\n        </div>\\n      </li>\\n      <!-- <li class=\\\"nav-item list-inline-item\\\">\\n        <div class=\\\"dropdown\\\">\\n          <a\\n            class=\\\"nav-link text-light\\\"\\n            id=\\\"dropdownMenu2\\\"\\n            data-toggle=\\\"dropdown\\\"\\n            aria-haspopup=\\\"true\\\"\\n            aria-expanded=\\\"false\\\"\\n          >\\n            Gestion</a\\n          >\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdown\\\">\\n            <a class=\\\"dropdown-item\\\" >Super Admin</a>\\n            <a class=\\\"dropdown-item\\\" >Admin</a>\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/allCDC\\\">CDC</a>\\n\\n          </div>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item list-inline-item\\\">\\n        <div class=\\\"dropdown\\\">\\n          <a\\n            class=\\\"nav-link text-light\\\"\\n            id=\\\"dropdownMenu2\\\"\\n            data-toggle=\\\"dropdown\\\"\\n            aria-haspopup=\\\"true\\\"\\n            aria-expanded=\\\"false\\\"\\n          >\\n            Historiques</a\\n          >\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdown\\\">\\n            <a class=\\\"dropdown-item\\\" >Pret</a>\\n            <a class=\\\"dropdown-item\\\" >Retour</a>\\n            <a class=\\\"dropdown-item\\\" >Ajout</a>\\n            <a class=\\\"dropdown-item\\\" >Suppression</a>\\n          </div>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item list-inline-item\\\">\\n        <a class=\\\"nav-link text-light\\\">Statistiques</a>\\n      </li> -->\\n    </ul>\\n    <div class=\\\"filler\\\"></div>\\n    <ul class=\\\"navbar-nav list-inline\\\">\\n      <!-- <li class=\\\"nav-item list-inline-item\\\">\\n      <div matBadgeOverlap=\\\"true\\\" matBadgePosition=\\\"above after\\\" [matBadge]=\\\"matBadge\\\" [matBadgeHidden]=\\\"matBadge == 0\\\" routerLink=\\\"/notification\\\" matBadgeColor=\\\"warn\\\">\\n        <img  src=\\\"../../assets/img/bell.png\\\"\\n        style=\\\"height: 30px; width: 30px;\\\">\\n      </div>\\n      </li> -->\\n      <li class=\\\"nav-item list-inline-item\\\">\\n        <a class=\\\"nav-link text-light\\\" [routerLink]=\\\"['/login']\\\" *ngIf=\\\"!isAuth\\\">Connexion</a>\\n      </li><li class=\\\"nav-item list-inline-item\\\">\\n        <a class=\\\"nav-link text-light\\\" *ngIf=\\\"isAuth\\\" (click)=\\\"logout()\\\">Deconnexion</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\";","export default \"  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-12 text-center\\\">\\r\\n      <img class=\\\"mx-2\\\" src=\\\"../../assets/img/logobook.png\\\" width=\\\"50\\\" alt=\\\"Library logo\\\" />\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12 col-md-5 card p-5 border-info\\\">\\r\\n      <h4>Connection</h4>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-check-label small font-italic font-weight-bold\\\">Votre email</label>\\r\\n          <input id=\\\"email\\\" [(ngModel)]=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"email\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-check-label small font-italic font-weight-bold\\\">Votre mot de passe</label>\\r\\n          <input id=\\\"password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"mot de passe\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group d-flex\\\">\\r\\n          <button *ngIf=\\\"!isLoading\\\" class=\\\"btn btn-group btn-outline-warning text-primary\\\" (click)=\\\"submit()\\\">\\r\\n            Connection\\r\\n          </button>\\r\\n          <button *ngIf=\\\"isLoading\\\" class=\\\"btn btn-group btn-outline-warning text-primary\\\" disabled>\\r\\n            <mat-spinner diameter=30></mat-spinner>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <span class=\\\"text-danger bg-white rounded-pill text-center\\\">{{error}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <mat-toolbar>\\n      <button class=\\\"btn btn-outline-success\\\">Envoyer un message</button>\\n      <button class=\\\"btn btn-outline-primary\\\">Envoyer un mail</button>\\n    </mat-toolbar>\\n  </div>\\n  <div class=\\\"col-md-6 col-sm-12\\\">\\n    <form>\\n      <mat-form-field class=\\\"form-group\\\">\\n        <textarea\\n          matInput\\n          placeholder=\\\"Ecrivez votre mail\\\"\\n          type=\\\"text\\\"\\n          name=\\\"\\\"\\n          id=\\\"\\\"\\n          cols=\\\"30\\\"\\n          rows=\\\"10\\\"\\n        ></textarea>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-group\\\">\\n        <textarea\\n          matInput\\n          placeholder=\\\"Ecrivez votre sms\\\"\\n          type=\\\"text\\\"\\n          name=\\\"\\\"\\n          id=\\\"\\\"\\n          cols=\\\"30\\\"\\n          rows=\\\"10\\\"\\n        ></textarea>\\n      </mat-form-field>\\n    </form>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <div class=\\\"d-flex sm\\\">\\n      <button class=\\\"btn btn-outline-success\\\" (click)=\\\"showSms()\\\">\\n        Envoyer un message\\n      </button>\\n      <button class=\\\"btn btn-outline-primary\\\" (click)=\\\"showMail()\\\">\\n        Envoyer un mail\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-6 col-sm-12\\\">\\n    <form *ngIf=\\\"mail\\\">\\n      <mat-form-field class=\\\"form-group\\\">\\n        <textarea\\n          matInput\\n          placeholder=\\\"Ecrivez votre mail\\\"\\n          type=\\\"text\\\"\\n          name=\\\"\\\"\\n          id=\\\"\\\"\\n          cols=\\\"5\\\"\\n          rows=\\\"5\\\"\\n        ></textarea>\\n      </mat-form-field>\\n      <button class=\\\" btn btn-primary mat-raised-button\\\">\\n        envoyer le mail\\n      </button>\\n    </form>\\n    <form *ngIf=\\\"sms\\\">\\n      <mat-form-field class=\\\"form-group\\\">\\n        <textarea\\n          matInput\\n          placeholder=\\\"Ecrivez votre sms\\\"\\n          type=\\\"text\\\"\\n          name=\\\"\\\"\\n          id=\\\"\\\"\\n          cols=\\\"5\\\"\\n          rows=\\\"5\\\"\\n        ></textarea>\\n      </mat-form-field>\\n      <button class=\\\"btn btn-success mat-raised-button\\\">envoyer le sms</button>\\n    </form>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"col-sm-12 col-md-12\\\">\\n  <mat-toolbar class=\\\" card-header bg-dark text-light\\\">\\n    Notifications  </mat-toolbar>  \\n  <mat-paginator\\n      [length]=\\\"length\\\"\\n      [pageSize]=\\\"pageSize\\\"\\n      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n      showFirstLastButtons\\n    >\\n    </mat-paginator>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n      <mat-table [dataSource]=\\\"datasource\\\" matSort>\\n        <!-- ID Column -->\\n        <ng-container matColumnDef=\\\"title\\\">\\n          <mat-header-cell class=\\\" bg-danger text-light\\\" *matHeaderCellDef mat-sort-header >\\n            Titre\\n          </mat-header-cell>\\n          <mat-cell class=\\\" bg-warning\\\" *matCellDef=\\\"let row\\\"> {{ row?.title }} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Progress Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n          <mat-header-cell class=\\\" bg-danger text-light\\\" *matHeaderCellDef mat-sort-header>\\n            Nom de l'abonné\\n          </mat-header-cell>\\n          <mat-cell class=\\\" bg-warning\\\" *matCellDef=\\\"let row\\\"> {{ row?.userName }} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"returnDate\\\">\\n          <mat-header-cell class=\\\" bg-danger text-light\\\" *matHeaderCellDef mat-sort-header>\\n            Date de retour\\n          </mat-header-cell>\\n          <mat-cell class=\\\" bg-warning\\\" *matCellDef=\\\"let row\\\"> {{ row?.returnDate }} </mat-cell>\\n        </ng-container>\\n        <!-- action Column -->\\n        <ng-container matColumnDef=\\\"Action\\\">\\n          <mat-header-cell class=\\\" bg-danger text-light\\\" *matHeaderCellDef mat-sort-header>\\n            Consulter l'abonné\\n          </mat-header-cell>\\n          <mat-cell class=\\\" bg-warning\\\" *matCellDef=\\\"let row\\\">\\n            <button\\n              [routerLink]=\\\"['/client', row?.idUser]\\\"\\n              class=\\\"btn btn-outline-danger\\\"\\n            >\\n              Consulter\\n            </button>\\n          </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row\\n          *matHeaderRowDef=\\\"displayedColumns\\\"\\n        ></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\">\\n        </mat-row>\\n      </mat-table>\\n    </div>\\n  </div>\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4 col-sm-12\\\">\\n    <h2 class=\\\"card-header\\\" >Tous les livres</h2>\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\" style=\\\"width: 100%;\\\">\\n      <ng-container matColumnDef=\\\"Type\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Type de livre </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Type}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"totalNumber\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre total </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.totalNumber}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"absentNumber\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Livres absents </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.absentNumber}} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n  </div>\\n  <div class=\\\"col-md-8 col-sm-12\\\"></div>\\n\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-5\\\">\\n    <mat-card class=\\\" bg-secondary\\\">\\n      <h4 class=\\\" card-header\\\" >Choisir une periode</h4>\\n      <mat-card-content>\\n        <mat-select (selectionChange)=\\\"onChange($event.value)\\\" >\\n          <mat-option value=\\\"Aout\\\">Aout</mat-option>\\n          <mat-option value=\\\"Juillet\\\">Juillet</mat-option>\\n        </mat-select>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-7\\\" *ngIf=\\\"month!= null\\\">\\n    <div>\\n      <div style=\\\"display: block\\\">\\n        <canvas baseChart\\n                [datasets]=\\\"barChartData\\\"\\n                [labels]=\\\"barChartLabels\\\"\\n                [options]=\\\"barChartOptions\\\"\\n                [legend]=\\\"barChartLegend\\\"\\n                [chartType]=\\\"barChartType\\\">\\n        </canvas>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","export default \"<div class=\\\"col-md-8\\\">\\n  <div class=\\\"card\\\">\\n    <h4 class=\\\"card-header text-light bg-dark\\\">Ajouter un abonné</h4>\\n    <div class=\\\"card-body\\\">\\n      <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"form-group\\\">\\n                <input\\n                  matInput\\n                  formControlName=\\\"firstName\\\"\\n                  placeholder=\\\"First Name\\\"\\n                  type=\\\"text\\\"\\n                />\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"form-group\\\">\\n                <input\\n                  matInput\\n                  formControlName=\\\"lastName\\\"\\n                  placeholder=\\\"Name\\\"\\n                  type=\\\"text\\\"\\n                />\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"form-group\\\">\\n                <input\\n                  matInput\\n                  formControlName=\\\"email\\\"\\n                  placeholder=\\\"Addresse email\\\"\\n                  type=\\\"email\\\"\\n                />\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n        <button\\n          mat-raised-button\\n          type=\\\"submit\\\"\\n          class=\\\"btn btn-danger pull-right\\\"\\n          [disabled]=\\\"userForm.invalid\\\"\\n\\n        >\\n          Ajouter l'abonné\\n        </button>\\n        <div class=\\\"clearfix\\\"></div>\\n      </form>\\n      <p class=\\\"text-danger\\\">{{ errorMessage }}</p>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<h4 mat-dialog-title>Notification</h4>\\n<div mat-dialog-content>\\n  <p>Etes vous sûr d'enregistrer {{data.name}} ?</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">Annuler</button>\\n  <button mat-button mat-dialog-close=\\\"ok\\\" cdkFocusInitial>Enregistrer</button>\\n</div>\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12 col-lg-4\\\">\\n    <div class=\\\"card card-profile\\\">\\n      <div class=\\\"card-body\\\">\\n        <mat-nav-list>\\n          <mat-list-item>\\n          </mat-list-item>\\n          <mat-list-item class=\\\"card-header text-center\\\">\\n            <h4 >{{ User?.firstName }} {{ User?.lastName }}</h4>\\n          </mat-list-item>\\n          <mat-list-item> Email: {{ User?.email }}  </mat-list-item>\\n        </mat-nav-list>\\n\\n        <!-- <a\\n          class=\\\"btn btn-danger btn-round\\\"\\n          (click)=\\\"message = true\\\"\\n          >Envoyer une notification</a\\n        > -->\\n      </div>\\n    </div>\\n    <app-single-message *ngIf=\\\"message\\\" ></app-single-message>\\n  </div>\\n  <div class=\\\"col-lg-8 col-md-12\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <mat-toolbar>\\n          Livres lus\\n        </mat-toolbar>\\n      </div>\\n      <div class=\\\"col-sm-12\\\">\\n        <table class=\\\"table table-striped\\\">\\n          <thead>\\n            <tr class=\\\" small\\\">\\n              <th scope=\\\"col\\\">#</th>\\n              <th scope=\\\"col\\\">Titre</th>\\n              <th scope=\\\"col\\\">Genre</th>\\n              <th scope=\\\"col\\\">Auteur</th>\\n              <th scope=\\\"col\\\">Date d'empeint</th>\\n              <th scope=\\\"col\\\">Date de retour</th>\\n              <th scope=\\\"col\\\">Rendu</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let book of myBooks; let i = index\\\" class=\\\"small\\\">\\n              <td>{{ i + 1 }}</td>\\n              <td>{{ book?.book?.title }}</td>\\n              <td>{{ book?.genre?.name }}</td>\\n              <td>{{ book?.book?.author }}</td>\\n              <td>{{ book?.borrowDate }}</td>\\n              <td>{{ book?.returnDate }}</td>\\n              <td *ngIf=\\\"book?.returned === 1\\\" class=\\\" bg-success text-light\\\">Oui</td>\\n              <td *ngIf=\\\"book?.returned === 0\\\" class=\\\" bg-danger text-light\\\">Non</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n\\n    <!-- Angular 8 pagination -->\\n  </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8\\\">\\n    <div class=\\\"card\\\">\\n      <h4 class=\\\"card-header bg-dark text-light\\\">Abonnés</h4>\\n      <div class=\\\"card-body menuB\\\">\\n        <button mat-raised-button class=\\\"btn btn-success btn-sm \\\" routerLink=\\\"/addUser\\\">\\n          Ajouter un abonné\\n        </button>\\n      </div>\\n      <form class=\\\"form-check-inline card-body\\\" [formGroup]=\\\"searchForm\\\">\\n        <input\\n          class=\\\"form-control\\\"\\n          formControlName=\\\"letter\\\"\\n          type=\\\"text\\\"\\n          placeholder=\\\"Rechercher un abonné\\\"\\n          aria-label=\\\"Rechercher\\\"\\n        />\\n        <button\\n          class=\\\"btn btn-outline-success\\\"\\n          type=\\\"submit\\\"\\n          [disabled]=\\\"searchForm.invalid\\\"\\n          (click)=\\\"search()\\\"\\n        >\\n          Rechercher\\n        </button>\\n        <button\\n          class=\\\"btn btn-outline-danger\\\"\\n          [disabled]=\\\"searchForm.invalid\\\"\\n          (click)=\\\"this.initForm()\\\"\\n        >\\n          Effacer\\n        </button>\\n      </form>\\n      <div *ngIf=\\\"searchResults\\\">\\n        <table class=\\\"table table-striped\\\">\\n          <thead>\\n            <tr>\\n              <th scope=\\\"col\\\">#</th>\\n              <th scope=\\\"col\\\">Prenom</th>\\n              <th scope=\\\"col\\\">Nom</th>\\n              <th scope=\\\"col\\\">Action</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let user of Users; let i = index\\\">\\n              <td>{{ i + 1 }}</td>\\n              <td>{{ user.firstName }}</td>\\n              <td>{{ user.lastName }}</td>\\n              <td>\\n                <button\\n                  (click)=\\\"details(user.idUser)\\\"\\n                  class=\\\"btn btn-group btn-outline-primary\\\"\\n                >\\n                  Consulter\\n                </button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <div>\\n        <button class=\\\"btn btn-group btn-danger\\\" *ngIf=\\\"errorMessage\\\">\\n          Cet utilisateur n'existe pas\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <div class=\\\"col-sm-12 col-md-4\\\">\\n    <div class=\\\"card\\\">\\n      <h4 class=\\\"card-header bg-dark text-light\\\">Messages</h4>\\n      <div class=\\\"card-body menuB\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12\\\"   >\\n                      <div class=\\\"d-flex sm\\\">\\n                        <button class=\\\"btn btn-outline-success\\\" (click)=\\\"showSms()\\\" >Message groupé</button>\\n                        <button class=\\\"btn btn-outline-primary\\\" (click)=\\\"showMail()\\\">Mail groupé</button>\\n                      </div>\\n          </div>\\n                <div class=\\\"col-md-6 col-sm-12\\\">\\n                  <form *ngIf=\\\"mail\\\">\\n                    <mat-form-field class=\\\"form-group\\\">\\n                      <textarea matInput placeholder=\\\"Ecrivez votre mail\\\" type=\\\"text\\\" name=\\\"\\\" id=\\\"\\\" cols=\\\"5\\\" rows=\\\"5\\\"></textarea>\\n                    </mat-form-field>\\n                    <button class=\\\" btn btn-primary mat-raised-button\\\">envoyer le mail</button>\\n                  </form>\\n                  <form *ngIf=\\\"sms\\\">\\n                    <mat-form-field class=\\\"form-group\\\">\\n                      <textarea matInput placeholder=\\\"Ecrivez votre sms\\\" type=\\\"text\\\" name=\\\"\\\" id=\\\"\\\" cols=\\\"5\\\" rows=\\\"5\\\"></textarea>\\n                    </mat-form-field>\\n                    <button class=\\\"btn btn-success mat-raised-button\\\">envoyer le sms</button>\\n\\n                  </form>\\n                </div>\\n\\n              </div>\\n\\n      </div>\\n    </div>\\n  </div> -->\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-10\\\">\\n    <div class=\\\"card\\\">\\n      <mat-paginator\\n        [length]=\\\"length\\\"\\n        [pageSize]=\\\"pageSize\\\"\\n        [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n        showFirstLastButtons\\n      >\\n      </mat-paginator>\\n      <div class=\\\"example-container mat-elevation-z8 card-body\\\">\\n        <mat-table [dataSource]=\\\"datasource\\\" matSort>\\n          <!-- ID Column -->\\n          <ng-container matColumnDef=\\\"firstName\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Prenom\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.firstName }} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Progress Column -->\\n          <ng-container matColumnDef=\\\"lastName\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Nom\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.lastName }} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"email\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Email\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.email }} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"Action\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Action\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">\\n              <button\\n                (click)=\\\"details(row.id)\\\"\\n                class=\\\"btn btn-group btn-outline-primary\\\"\\n              >\\n                Consulter\\n              </button>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"> </mat-row>\\n        </mat-table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport {\n  MatSortModule,\n  MatPaginatorModule,\n  MatDialogModule,\n  MatNativeDateModule\n} from '@angular/material';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport {MatBadgeModule} from '@angular/material/badge';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  exports: [\n    MatBadgeModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatTabsModule,\n    MatNativeDateModule,\n    BrowserAnimationsModule,\n    MatMenuModule,\n    MatSortModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatPaginatorModule,\n    MatToolbarModule,\n    MatListModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatDividerModule,\n    MatInputModule,\n    MatStepperModule,\n    MatCardModule,\n    MatTableModule,\n    MatSelectModule,\n    MatInputModule\n  ]\n})\nexport class AngularMaterialModule {}\n","import { AuthGuardService } from './services/guards/auth-guard.service';\nimport { LoginComponent } from './login/login.component';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { MessagesComponent } from './messages/messages/messages.component';\nimport { SingleMessageComponent } from './messages/single-message/single-message.component';\nimport { BorrowBookComponent } from './book-dashboard/borrow-book/borrow-book.component';\nimport { GlobalStatsComponent } from './statistic/global-stats/global-stats.component';\nimport { ClientsComponent } from './users/clients/clients.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AddUserComponent, Dialog } from './users/add-user/add-user.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClientComponent } from './users/client/client.component';\nimport { BorrowedBookComponent } from './book-dashboard/borrowed-book/borrowed-book.component';\nimport { BookDashboardComponent } from './book-dashboard/book-dashboard.component';\nimport { BookComponent } from './book-dashboard/book/book.component';\nimport { AddBookComponent } from './book-dashboard/add-book/add-book.component';\nimport { LivresComponent } from './book-dashboard/livres/livres.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AuthGuardDeconnectedService } from './services/guards/auth-guard-deconnected.service';\n\nexport const routes: Routes = [\n  {\n    path: '', redirectTo: '/dashboard', pathMatch: 'full'\n  },\n   {\n    path: '*', redirectTo: '/dashboard', pathMatch: 'full'\n  },\n\n  {\n    path: 'dashboard', component: DashboardComponent, pathMatch: 'full'\n  },\n  {\n    path: 'addUser', component: AddUserComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'clients', component: ClientsComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'client/:id', component: ClientComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'singleMessage', component: SingleMessageComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'messages', component: MessagesComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  }\n  ,\n  {\n    path: 'GS', component: GlobalStatsComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'type/:id', component: LivresComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'addBook', component: AddBookComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'book/:id', component: BookComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'bookDashboard', component: BookDashboardComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'borrowedBook', component: BorrowedBookComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'borrowBook/:id', component: BorrowBookComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'notification', component: NotificationsComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'login', component: LoginComponent, pathMatch: 'full', canActivate: [AuthGuardDeconnectedService]\n  },\n\n];\n\nexport const components = [\n  AddUserComponent, DashboardComponent, ClientsComponent, ClientComponent,\n  NotificationsComponent , GlobalStatsComponent, Dialog,   BorrowedBookComponent,\n  BookDashboardComponent, SingleMessageComponent,\n  BookComponent, HeaderComponent, BorrowBookComponent, MessagesComponent,\n  AddBookComponent, LoginComponent,\n  LivresComponent\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \".navigation {\\n  width: 100%;\\n  text-align: right;\\n}\\n\\n.container {\\n  background: white;\\n}\\n\\n.brand {\\n  height: 100px;\\n  width: auto;\\n}\\n\\n.navbar {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.logo {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.content {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.filler {\\n  flex: 1 1 auto;\\n}\\n\\n.top {\\n  width: auto;\\n  height: 10px;\\n  background: #3499d2;\\n  background: linear-gradient(90deg, #3499d2 19%, #d0f4cb 95%);\\n  background-size: cover;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRDpcXHByb2pldFxcYW5ndWxhciBwcm9qZWN0XFxuYXRpb25hbExpYnJhcnkvc3JjXFxhcHBcXGFwcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLGlCQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxpQkFBQTtBQ0VGOztBREFBO0VBQ0UsYUFBQTtFQUNBLFdBQUE7QUNHRjs7QUREQTtFQUNFLGFBQUE7RUFDQSw4QkFBQTtBQ0lGOztBREZBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQ0tGOztBREhBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUNNRjs7QURKQTtFQUNFLGNBQUE7QUNPRjs7QURKQTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0EsbUJBQUE7RUFDQSw0REFBQTtFQUFzRixzQkFBQTtBQ1F4RiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZpZ2F0aW9ue1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG4uY29udGFpbmVye1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbn1cbi5icmFuZHtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgd2lkdGg6IGF1dG87XG59XG4ubmF2YmFye1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG4ubG9nb3tcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uY29udGVudCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4uZmlsbGVye1xuICBmbGV4OiAxIDEgYXV0bztcbn1cblxuLnRvcHtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMTBweDtcbiAgYmFja2dyb3VuZDogcmdiKDUyLDE1MywyMTApO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoNTIsMTUzLDIxMCwxKSAxOSUsIHJnYmEoMjA4LDI0NCwyMDMsMSkgOTUlKTsgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59IiwiLm5hdmlnYXRpb24ge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5jb250YWluZXIge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbn1cblxuLmJyYW5kIHtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgd2lkdGg6IGF1dG87XG59XG5cbi5uYXZiYXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5sb2dvIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5jb250ZW50IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmZpbGxlciB7XG4gIGZsZXg6IDEgMSBhdXRvO1xufVxuXG4udG9wIHtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMTBweDtcbiAgYmFja2dyb3VuZDogIzM0OTlkMjtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjMzQ5OWQyIDE5JSwgI2QwZjRjYiA5NSUpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufSJdfQ== */\";","import { AuthService } from './services/auth.service';\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent{\n  title = 'gym';\n  constructor(private router: Router,\n    private auth: AuthService) {\n    //\n    auth.Authenticated();\n  }\n}\n","import { AuthGuardService } from './services/guards/auth-guard.service';\nimport { AuthService } from './services/auth.service';\nimport { NotificationsService } from './services/notifications.service';\nimport { Dialog } from './users/add-user/add-user.component';\nimport { BooksService } from './services/books.service';\nimport { ClientsService } from './services/clients.service';\nimport { RouterModule } from '@angular/router';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { AppRoutingModule, components, routes } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { GestionModule } from './gestion/gestion.module';\nimport { AuthGuardDeconnectedService } from './services/guards/auth-guard-deconnected.service';\n\n@NgModule({\n  entryComponents: [Dialog],\n  declarations: [AppComponent, components],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    AngularMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes),\n    GestionModule,\n    HttpClientModule\n  ],\n  providers: [ClientsService, BooksService, NotificationsService, AuthService,\n    AuthGuardDeconnectedService, AuthGuardService,\n    {\n      provide : HTTP_INTERCEPTORS,\n      useClass: AuthGuardService,\n      multi   : true,\n    },  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2stZGFzaGJvYXJkL2FkZC1ib29rL2FkZC1ib29rLmNvbXBvbmVudC5zY3NzIn0= */\";","import { AuthService } from './../../services/auth.service';\nimport { BooksService } from './../../services/books.service';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material/dialog';\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styleUrls: ['./add-book.component.scss']\n})\nexport class AddBookComponent implements OnInit {\n  bookForm: FormGroup;\n  book;\n  $event; // uploaded image\n  picTab: Array<any> = []; // display\n  picSend: (File | Blob)[] = []; // send to firebase\n  message; // for the pic\n  genres;\n  idGenre;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    public dialog: MatDialog,\n    private bookS: BooksService,\n    private auth: AuthService\n  ) {\n    bookS.getGenres().subscribe(\n      (data) => {this.genres = data}\n      , (error) => {\n        this.auth.checkAuthError(error);\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.initForm();\n    //  this.compS.getCompany(localStorage.getItem('id')).subscribe(\n    //  (data) => this.user = data\n    // );\n  }\n  initForm() {\n    this.bookForm = this.formBuilder.group({\n      title: ['', [Validators.required]],\n      author: ['', [Validators.required]],\n      year: ['', [Validators.required]],\n      genre: [Validators.required]\n    });\n  }\n  onSubmit() {\n    this.book = {\n      title: this.bookForm.get('title').value,\n      author: this.bookForm.get('author').value,\n      year: this.bookForm.get('year').value,\n      enabled: 1,\n      image: '',\n      disponible: 1\n    };\n    this.idGenre = this.bookForm.get('genre').value;\n\n    this.openDialog();\n  }\n  // upload(event) {\n  //   this.picSend = event.target.files[0];\n  //   const reader = new FileReader();\n  //   const mimeType = event.target.files[0].type;\n  //   if (mimeType.match(/image\\/*/) == null) {\n  //     this.message = 'Only images are supported.';\n  //     return;\n  //   }\n  //   console.log(this.picSend);\n\n  //   reader.readAsDataURL(event.target.files[0]);\n  //   reader.onload = () => {\n  //     this.picTab.push({ image: reader.result });\n  //   };\n  // }\n  openDialog(): void {\n    const dialogRef = this.dialog.open(Dialog, {\n      width: '250px',\n      data: this.book\n    });\n\n    dialogRef.afterClosed().subscribe((data: any) => {\n      if (data) {\n        this.bookS.addBook(this.book, this.idGenre).subscribe(() =>{\n          this.router.navigate(['/bookDashboard']);\n        });\n      }\n    });\n  }\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html'\n})\n// tslint:disable-next-line:component-class-suffix\nexport class Dialog {\n  constructor(\n    public dialogRef: MatDialogRef<Dialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n  save() {\n    this.dialogRef.close(true);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2stZGFzaGJvYXJkL2Jvb2stZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIn0= */\";","import { AuthService } from './../services/auth.service';\nimport { BooksService } from './../services/books.service';\nimport { Component, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-book-dashboard',\n  templateUrl: './book-dashboard.component.html',\n  styleUrls: ['./book-dashboard.component.scss']\n})\nexport class BookDashboardComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  searchForm: FormGroup;\n  searchResults = false;\n  displayedColumns = ['title', 'author', 'genre', 'Action'];\n  Books = [];\n  genres;\n  datasource;\n  length;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10];\n  allBooks = true;\n  specificBooks = false;\n  bookGenreId: number;\n  errorMessage: boolean;\n  constructor(\n    private bookS: BooksService,\n    private route: Router,\n    private formBuilder: FormBuilder,\n    private auth: AuthService\n  ) {\n    this.bookS.getBooks().subscribe((data: any) => {\n      this.datasource = new MatTableDataSource(data);\n      this.length = data.length;\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n    this.bookS.getGenres().subscribe((data: any) => {\n      this.genres = data;\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngAfterViewInit() {\n    //\n  }\n  search() {\n    this.Books = [];\n    this.searchResults = false;\n    const letter = this.searchForm\n      .get('letter')\n      .value.toLowerCase()\n      .trim();\n    if (letter === '') {\n      this.errorMessage = true;\n    } else {\n      this.bookS.getBooks().subscribe((data: any) => {\n        data.forEach(async book => {\n          if (book.title.toLowerCase().includes(letter.toLowerCase())) {\n            await this.Books.push(book);\n            this.searchResults = true;\n            this.errorMessage = false;\n\n          }\n        });\n      });\n      if (this.Books.length === 0) {\n        this.errorMessage = true;\n      }\n    }\n  }\n  initForm() {\n    this.searchForm = this.formBuilder.group({\n      letter: ['', [Validators.required]]\n    });\n    this.Books = [];\n    this.searchResults = false;\n    this.errorMessage = false;\n  }\n  details(idBook) {\n    this.route.navigate(['/book/', idBook]);\n  }\n  displayAll() {\n    this.allBooks = true;\n    this.specificBooks = false;\n  }\n  display(id) {\n    this.allBooks = false;\n    this.specificBooks = true;\n    this.bookGenreId = id;\n  }\n\n  delete(id) {\n    this.bookS.delete(id).subscribe(() => {\n\n    }, (error) => {\n      this.auth.checkAuthError(error);\n      if (error.status === 500) {\n        alert('This book was already borrowed, it\\'s saved in the borrowed book db, you can\\'t delete it');\n      }\n    });\n  }\n\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngOnChanges(changes: SimpleChanges): void {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    this.bookS.getBooks().subscribe((data: any) => {\n      this.datasource = new MatTableDataSource(data);\n      this.length = data.length;\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n  }\n}\n","export default \".imgWrapper {\\n  max-height: 400px;\\n  max-width: 200px;\\n}\\n\\n.imgCarousel {\\n  height: 100%;\\n  width: 100%;\\n  margin: auto;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9vay1kYXNoYm9hcmQvYm9vay9EOlxccHJvamV0XFxhbmd1bGFyIHByb2plY3RcXG5hdGlvbmFsTGlicmFyeS9zcmNcXGFwcFxcYm9vay1kYXNoYm9hcmRcXGJvb2tcXGJvb2suY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Jvb2stZGFzaGJvYXJkL2Jvb2svYm9vay5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0VBQ0EsZ0JBQUE7QUNDSjs7QURFRTtFQUNFLFlBQUE7RUFDQSxXQUFBO0VBQ0osWUFBQTtFQUNBLGNBQUE7QUNDQSIsImZpbGUiOiJzcmMvYXBwL2Jvb2stZGFzaGJvYXJkL2Jvb2svYm9vay5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbWdXcmFwcGVye1xyXG4gICAgbWF4LWhlaWdodDogNDAwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDIwMHB4O1xyXG5cclxuICB9XHJcbiAgLmltZ0Nhcm91c2Vse1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbm1hcmdpbjogYXV0bztcclxuZGlzcGxheTogYmxvY2s7ICB9IiwiLmltZ1dyYXBwZXIge1xuICBtYXgtaGVpZ2h0OiA0MDBweDtcbiAgbWF4LXdpZHRoOiAyMDBweDtcbn1cblxuLmltZ0Nhcm91c2VsIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn0iXX0= */\";","import { AuthService } from './../../services/auth.service';\nimport { BooksService } from './../../services/books.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.scss']\n})\nexport class BookComponent implements OnInit {\n  id;\n  Books = [];\n  book;\n  borrow = false;\n  prets;\n  constructor(\n    private aR: ActivatedRoute,\n    private auth: AuthService,\n    private bookS: BooksService\n  ) {\n    this.aR.params.subscribe(params => {\n      this.id = params.id;\n      bookS.getBook(this.id).subscribe((data: any) => {\n        this.book = data;\n        this.bookS\n          .getPretBook(this.book.id)\n          .subscribe(results => (this.prets = results));\n      }, (error) => {\n        this.auth.checkAuthError(error);\n      });\n\n      bookS.getPretBook(this.id).subscribe((data)=>{\n        this.prets = data;\n        console.log(data);\n\n      }, (error) => {\n        this.auth.checkAuthError(error);\n      })\n    });\n  }\n  borrowBook() {\n    this.borrow = true;\n  }\n  ngOnInit() {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2stZGFzaGJvYXJkL2JvcnJvdy1ib29rL2JvcnJvdy1ib29rLmNvbXBvbmVudC5zY3NzIn0= */\";","import { AuthService } from './../../services/auth.service';\nimport { BooksService } from 'src/app/services/books.service';\nimport { async } from '@angular/core/testing';\nimport { ClientsService } from './../../services/clients.service';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-borrow-book',\n  templateUrl: './borrow-book.component.html',\n  styleUrls: ['./borrow-book.component.scss']\n})\nexport class BorrowBookComponent implements OnInit {\n  @Input() book;\n  @Output() borrowed = new EventEmitter<boolean>();\n  isLinear = true;\n  searchForm: FormGroup;\n  borrowForm: FormGroup;\n  Users;\n  searchResults = false;\n  selected = false;\n  errorMessage = false;\n  choosenUser;\n  minDate;\n  maxDate;\n  errorDate = false;\n  myFilter = (d: Date | null): boolean => {\n    const day = (d || new Date()).getDay();\n    // Prevent Saturday and friday from being selected.\n    return day !== 0 && day !== 5;\n  }\n  constructor(\n    private formBuilder: FormBuilder,\n    private userS: ClientsService,\n    private bookS: BooksService,\n    private auth: AuthService\n  ) {\n    const currentYear = new Date().getFullYear();\n    const currentMonth = new Date().getMonth();\n    const currentDay = new Date().getDate();\n    this.minDate = new Date(currentYear - 0, currentMonth, currentDay);\n    this.maxDate = new Date(currentYear + 0, currentMonth, currentDay + 15);\n  }\n\n  ngOnInit() {\n    this.initsearchForm();\n    this.borrowForm = this.formBuilder.group({\n      returnDate: ['', Validators.required],\n    });\n  }\n  onSubmit() {\n    const event = new Date(this.borrowForm.get('returnDate').value);\n\n    const options: any = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    const date = event.toLocaleDateString('fr-FR', options);\n    const Pret = {\n      userId: localStorage.getItem('id'),\n      bookId: this.book.id,\n      clientId: this.choosenUser.id,\n      borrowDate: new Date().toLocaleDateString('fr-FR', options),\n      returnDate: date,\n      returned: 0,\n    };\n    this.bookS.borrowBook(Pret).subscribe(() => {\n      this.borrowed.emit();\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n  }\n  search() {\n    this.Users = [];\n    this.searchResults = false;\n    this.selected = false;\n    const letter = this.searchForm\n      .get('letter')\n      .value.toLowerCase().trim()\n      ;\n    if (letter === '') {\n      this.errorMessage = true;\n    } else {\n      this.userS.getClients().subscribe((data: any) => {\n        data.forEach(async user => {\n          if (user.firstName.toLowerCase().includes(letter) || user.lastName.toLowerCase().includes(letter)) {\n            await this.Users.push(user);\n            this.searchResults = true;\n          }\n        });\n        if (this.Users.length === 0) {\n          this.errorMessage = true;\n        }\n      }, (error) => {\n        this.auth.checkAuthError(error);\n      });\n    }\n  }\n  initsearchForm() {\n    this.searchForm = this.formBuilder.group({\n      letter: ['', [Validators.required]]\n    });\n    this.Users = [];\n    this.selected = false;\n    this.searchResults = false;\n    this.errorMessage = false;\n  }\n  choose(choosenUser) {\n    this.choosenUser = choosenUser;\n    this.selected = true;\n    this.searchResults = false;\n  }\n\n  resetUser() {\n    this.choosenUser = null;\n    this.selected = false;\n    this.searchResults = false;\n    this.initsearchForm();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2stZGFzaGJvYXJkL2JvcnJvd2VkLWJvb2svYm9ycm93ZWQtYm9vay5jb21wb25lbnQuc2NzcyJ9 */\";","import { AuthService } from './../../services/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { BooksService } from 'src/app/services/books.service';\nimport { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-borrowed-book',\n  templateUrl: './borrowed-book.component.html',\n  styleUrls: ['./borrowed-book.component.scss']\n})\nexport class BorrowedBookComponent implements OnInit {\n  Prets;\n  searchResults;\n  searchPrets;\n  searchForm: FormGroup;\n  errorMessage = false;\n  constructor(private bookS: BooksService, private formbuilder: FormBuilder,\n              private router: Router, private auth: AuthService) {\n\n    this.getAllPrets();\n  }\n  ngOnInit() {\n    this.initsearchForm();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    // Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    // Add '${implements OnChanges}' to the class.\n    this.getAllPrets();\n  }\n  rendu(pret) {\n    const options: any = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    pret.returnDate = new Date().toLocaleDateString('fr-FR', options),\n      pret.returned = 1;\n    this.bookS.rendu(pret).subscribe(() => {\n      this.initsearchForm();\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n\n  }\n  notifier() {\n    //\n  }\n  getAllPrets() {\n    this.bookS.getAllPrets().subscribe((data: any) => {\n      this.Prets = data;\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n  }\n  search() {\n    this.searchPrets = [];\n    this.searchResults = false;\n    const letter = this.searchForm\n      .get('letter')\n      .value.trim()\n      .toLowerCase();\n    if (letter === '') {\n      this.errorMessage = true;\n\n    } else {\n      this.Prets.forEach(async pret => {\n        if (pret.book.title.toLowerCase().includes(letter)) {\n          await this.searchPrets.push(pret);\n          this.searchResults = true;\n\n        }\n      });\n      if (this.searchPrets.length === 0) {\n        this.errorMessage = true;\n\n      }\n    }\n  }\n  initsearchForm() {\n    this.searchForm = this.formbuilder.group({\n      letter: ['', [Validators.required]]\n    });\n    this.searchPrets = [];\n    this.searchResults = false;\n    this.errorMessage = false;\n  }\n\n  check(id) {\n\n    this.router.navigate(['/book/' + id]);\n\n  }\n}\n","export default \"mat-card {\\n  background-color: transparent;\\n  text-align: center;\\n}\\n\\n.imgWrapper {\\n  max-height: 400px;\\n  max-width: 200px;\\n}\\n\\n.imgCarousel {\\n  height: 100%;\\n  width: 100%;\\n  margin: auto;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9vay1kYXNoYm9hcmQvbGl2cmVzL0Q6XFxwcm9qZXRcXGFuZ3VsYXIgcHJvamVjdFxcbmF0aW9uYWxMaWJyYXJ5L3NyY1xcYXBwXFxib29rLWRhc2hib2FyZFxcbGl2cmVzXFxsaXZyZXMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Jvb2stZGFzaGJvYXJkL2xpdnJlcy9saXZyZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw2QkFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FERUU7RUFDRSxpQkFBQTtFQUNBLGdCQUFBO0FDQ0o7O0FERUU7RUFDRSxZQUFBO0VBQ0EsV0FBQTtFQUNKLFlBQUE7RUFDQSxjQUFBO0FDQ0EiLCJmaWxlIjoic3JjL2FwcC9ib29rLWRhc2hib2FyZC9saXZyZXMvbGl2cmVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgfVxyXG4gIC5pbWdXcmFwcGVye1xyXG4gICAgbWF4LWhlaWdodDogNDAwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDIwMHB4O1xyXG5cclxuICB9XHJcbiAgLmltZ0Nhcm91c2Vse1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbm1hcmdpbjogYXV0bztcclxuZGlzcGxheTogYmxvY2s7ICB9IiwibWF0LWNhcmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uaW1nV3JhcHBlciB7XG4gIG1heC1oZWlnaHQ6IDQwMHB4O1xuICBtYXgtd2lkdGg6IDIwMHB4O1xufVxuXG4uaW1nQ2Fyb3VzZWwge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufSJdfQ== */\";","import { Component, OnInit, ViewChild, Input, SimpleChanges } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { BooksService } from 'src/app/services/books.service';\nimport { FormBuilder } from '@angular/forms';\n@Component({\n  selector: 'app-livres',\n  templateUrl: './livres.component.html',\n  styleUrls: ['./livres.component.scss']\n})\nexport class LivresComponent implements OnInit {\n  @Input() genreId: number;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  displayedColumns = ['title', 'author', 'year', 'Action'];\n  datasource;\n  length;\n  books;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10];\n  constructor(\n    private bookS: BooksService,\n    private route: Router,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.bookS.getBooksByGenre(this.genreId).subscribe((data:any) => {\n      this.books = data;\n      this.datasource = new MatTableDataSource(data);\n      this.length = data.length;\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n        });\n  }\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngAfterViewInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    this.bookS.getBooksByGenre(this.genreId).subscribe((data:any) => {\n      this.books = data;\n      this.datasource = new MatTableDataSource(data);\n      this.length = data.length;\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n        });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\";","import { BooksService } from 'src/app/services/books.service';\nimport { AuthService } from './../services/auth.service';\nimport { Router } from '@angular/router';\nimport { Component, ElementRef, AfterViewInit, Directive, HostListener } from '@angular/core';\nimport { ClientsService } from '../services/clients.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n  private map;\n  multi = [\n    {\n      name: 'Roman',\n      series: [\n        {\n          name: 'JAN',\n          value: 5\n        },\n        {\n          name: 'FEV',\n          value: 34\n        },\n        {\n          name: 'MARS',\n          value: 12\n        }\n      ]\n    },\n\n    {\n      name: 'Bande dessinée',\n      series: [\n        {\n          name: 'JAN',\n          value: 16\n        },\n        {\n          name: 'FEV',\n          value: 24\n        },\n        {\n          name: 'MARS',\n          value: 35\n        }\n      ]\n    },\n    {\n      name: 'Policier',\n      series: [\n        {\n          name: 'JAN',\n          value: 6\n        },\n        {\n          name: 'FEV',\n          value: 18\n        },\n        {\n          name: 'MARS',\n          value: 11\n        }\n      ]\n    },\n    {\n      name: 'Journal',\n      series: [\n        {\n          name: 'JAN',\n          value: 2\n        },\n        {\n          name: 'FEV',\n          value: 7\n        },\n        {\n          name: 'MARS',\n          value: 3\n        }\n      ]\n    }\n  ];\n  view: any[] = [700, 300];\n\n\n  // options\n  legend = true;\n  showLabels = true;\n  animations = true;\n  xAxis = true;\n  yAxis = true;\n  showYAxisLabel = true;\n  showXAxisLabel = true;\n  xAxisLabel = 'Mois';\n  yAxisLabel = 'Nombres';\n  timeline = true;\n\n  clientNumber = 0;\n  bookNumber = 0;\n  borrowBookNumber = 0;\n  userName;\n  isAuth;\n\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\n  };\n  constructor(private elementRef: ElementRef, private router: Router, private auth: AuthService,\n    private client: ClientsService, private book: BooksService) {\n    Object.assign(this, { this: this.multi });\n    this.userName = localStorage.getItem('username');\n    this.book.getBooks().subscribe(async (data: any) => {\n      this.bookNumber = data.length;\n      let borrowBook = await data.filter(book => {\n        return book.disponible === 0;\n      });\n      this.borrowBookNumber = borrowBook.length;\n    });\n    this.client.getClients().subscribe(async (data: any) => {\n      this.clientNumber = data.length;\n    });\n    this.auth.isAuth.subscribe(data => {\n      this.isAuth = data;\n    })\n  }\n\n  onSelect(data): void {\n    console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n  }\n\n  onActivate(data): void {\n    console.log('Activate', JSON.parse(JSON.stringify(data)));\n  }\n\n  onDeactivate(data): void {\n    console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dlc3Rpb24vZ2VucmUvZ2VucmUuY29tcG9uZW50LnNjc3MifQ== */\";","import { AuthService } from './../../services/auth.service';\nimport { BooksService } from './../../services/books.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-genre',\n  templateUrl: './genre.component.html',\n  styleUrls: ['./genre.component.scss']\n})\nexport class GenreComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  genreForm: FormGroup;\n  displayedColumns = ['name', 'description', 'Action'];\n  Genre;\n  datasource;\n  length;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10];\n  constructor(\n    private bookS: BooksService,\n    private auth: AuthService,\n    private formBuilder: FormBuilder\n  ) {\n  this.initForm();\n  }\n  initForm() {\n    this.genreForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      description: ['', [Validators.required]]\n    });\n    this.datasource = new MatTableDataSource(null);\n    this.bookS.getGenres().subscribe((data: any) => {\n      this.datasource = new MatTableDataSource(data);\n      this.length = data.length;\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n  }\n  async onSubmit() {\n    this.Genre = {\n      idGenre: '',\n      name: this.genreForm.get('name').value,\n      description: this.genreForm.get('description').value,\n      enabled: 1\n    };\n    await this.bookS.addGenre(this.Genre).subscribe(() => {\n      this.initForm();\n\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n  }\n  async delete(id) {\n    await this.bookS.deleteGenre(id).subscribe(() => {\n      this.initForm();\n    }, (error) => {\n      this.auth.checkAuthError(error);\n      if (error.status === 500) {\n        alert('You have to remove first the books from that type');\n      }\n    });\n\n  }\n  details(idGenre) {\n    //\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngAfterViewInit() {\n    //\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { routesG } from './gestion.routing.module';\nimport { GenreComponent } from './genre/genre.component';\n\n\n\n@NgModule({\n  declarations: [GenreComponent],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    AngularMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routesG),\n  ]\n})\nexport class GestionModule { }\n","import { DashboardComponent } from './../dashboard/dashboard.component';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GenreComponent } from './genre/genre.component';\r\n\r\nexport const routesG: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/dashboard',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    component: DashboardComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'genre',\r\n    component: GenreComponent,\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\nexport const components = [];\r\n@NgModule({\r\n  imports: [RouterModule],\r\n  exports: [RouterModule]\r\n})\r\nexport class GestionRoutingModule {}\r\n","export default \".navigation {\\n  width: 100%;\\n  text-align: right;\\n}\\n\\n.container {\\n  background: white;\\n}\\n\\n.brand {\\n  height: 100px;\\n  width: auto;\\n}\\n\\n.navbar-nav {\\n  display: flex;\\n}\\n\\n.logo {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.content {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.filler {\\n  flex-grow: 1;\\n}\\n\\n.top {\\n  width: auto;\\n  height: 10px;\\n  background: #3499d2;\\n  background: linear-gradient(90deg, #3499d2 19%, #d0f4cb 95%);\\n  background-size: cover;\\n}\\n\\nnav {\\n  margin-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL0Q6XFxwcm9qZXRcXGFuZ3VsYXIgcHJvamVjdFxcbmF0aW9uYWxMaWJyYXJ5L3NyY1xcYXBwXFxoZWFkZXJcXGhlYWRlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSxpQkFBQTtBQ0NKOztBRENFO0VBQ0UsaUJBQUE7QUNFSjs7QURBRTtFQUNFLGFBQUE7RUFDQSxXQUFBO0FDR0o7O0FEREU7RUFDRSxhQUFBO0FDSUo7O0FERkU7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FDS0o7O0FESEU7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQ01KOztBREpFO0VBQ0YsWUFBQTtBQ09BOztBRExFO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLDREQUFBO0VBQXNGLHNCQUFBO0FDUzFGOztBRFBFO0VBQ0UsbUJBQUE7QUNVSiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmF2aWdhdGlvbntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgfVxyXG4gIC5jb250YWluZXJ7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICB9XHJcbiAgLmJyYW5ke1xyXG4gICAgaGVpZ2h0OiAxMDBweDtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gIH1cclxuICAubmF2YmFyLW5hdntcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgfVxyXG4gIC5sb2dve1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgfVxyXG4gIC5jb250ZW50IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuICAuZmlsbGVye1xyXG5mbGV4LWdyb3c6IDE7ICB9XHJcbiAgXHJcbiAgLnRvcHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZDogcmdiKDUyLDE1MywyMTApO1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2JhKDUyLDE1MywyMTAsMSkgMTklLCByZ2JhKDIwOCwyNDQsMjAzLDEpIDk1JSk7ICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gIH1cclxuICBuYXZ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH0iLCIubmF2aWdhdGlvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLmNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xufVxuXG4uYnJhbmQge1xuICBoZWlnaHQ6IDEwMHB4O1xuICB3aWR0aDogYXV0bztcbn1cblxuLm5hdmJhci1uYXYge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4ubG9nbyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uY29udGVudCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5maWxsZXIge1xuICBmbGV4LWdyb3c6IDE7XG59XG5cbi50b3Age1xuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiAxMHB4O1xuICBiYWNrZ3JvdW5kOiAjMzQ5OWQyO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsICMzNDk5ZDIgMTklLCAjZDBmNGNiIDk1JSk7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbm5hdiB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59Il19 */\";","import { AuthService } from './../services/auth.service';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\nmatBadge = 0;\nisAuth = false;\n  constructor(\n    private notifS: NotificationsService,\n    private router: Router,\n    public auth: AuthService\n  ) {\n\n    auth.isAuth.subscribe((auth: any)=>{\n      this.isAuth = auth;\n    });\n   }\n\n  logout(): void {\n    this.auth.logout();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\";","import { Router } from '@angular/router';\r\nimport { ClientsService } from 'src/app/services/clients.service';\r\nimport { Component, OnInit, AfterViewInit, AfterContentChecked } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  error;\r\n  email: '';\r\n  password: '';\r\n  isLoading = false;\r\n  constructor(\r\n    private authS: AuthService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  submit(): void {\r\n    //\r\n    this.isLoading = true\r\n    this.authS.login(this.email, this.password);\r\n    this.authS.erroLogout().subscribe((data) => {\r\n      if (data === 500) {\r\n        this.error = \"Erreur de pseudo ou de mot de passe\";\r\n        this.isLoading = false\r\n      }    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2VzL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2VzL3NpbmdsZS1tZXNzYWdlL3NpbmdsZS1tZXNzYWdlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-single-message',\n  templateUrl: './single-message.component.html',\n  styleUrls: ['./single-message.component.scss']\n})\nexport class SingleMessageComponent implements OnInit {\n  mail = false;\n  sms = false;\n  constructor() {}\n\n  showSms() {\n    this.sms = true;\n    this.mail = false;\n  }\n  showMail() {\n    this.sms = false;\n    this.mail = true;\n  }\n  ngOnInit(): void {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9ucy5jb21wb25lbnQuc2NzcyJ9 */\";","import { NotificationsService } from './../services/notifications.service';\nimport { BooksService } from './../services/books.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  displayedColumns = ['title', 'name', 'returnDate', 'Action'];\n  datasource;\n  length;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10];\n  notifs;\n  constructor(\n    private bookS: BooksService,\n    private notifS: NotificationsService\n  ) {\n    notifS.getAllNotifs().subscribe((data:any) => {\n      this.datasource = new MatTableDataSource(data);\n      this.length = data.length;\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n    });\n  }\n\n  ngOnInit(): void {}\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  headers;\r\n  public isAuth: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  public error: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n  public staff: BehaviorSubject<any> = new BehaviorSubject<any>({});\r\n  public isSuperviseur = false;\r\n  public hasPower = false;\r\n  public isAgent = false;\r\n  public isVisiteur = false;\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n  setHeader() {\r\n    this.headers = new HttpHeaders().set('Content-Type', 'application/json')\r\n      .set('X-Requested-Width', 'XMLHttpRequest').set('Authorization', 'Bearer ' + localStorage.getItem('token'));\r\n  }\r\n  Authenticated() {\r\n    if (localStorage.getItem('id') && localStorage.getItem('token')) {\r\n      this.isAuth.next(true);\r\n    } else {\r\n      this.isAuth.next(false);\r\n    }\r\n    return this.isAuth.asObservable();\r\n\r\n  }\r\n\r\n  // SetStaffType(id) {\r\n  //   switch (id) {\r\n  //     case '5f2005ac07a53d4f38f95e08':\r\n  //       this.isSuperviseur = true;\r\n  //       break;\r\n  //     case '5f3b678b01539006e48af129':\r\n  //       this.isAgent = true;\r\n  //       break;\r\n  //     case '5f3b67fc01539006e48af12a':\r\n  //       this.hasPower = true;\r\n  //       break;\r\n  //     case '5f3b685201539006e48af12b':\r\n  //       this.isVisiteur = true;\r\n  //       break;\r\n  //   }\r\n  // }\r\n  canActivate(): boolean {\r\n    let state = false;\r\n\r\n    this.Authenticated().subscribe(data => {\r\n      state = data;\r\n    });\r\n    if (state) {\r\n      this.router.navigate(['/dashboard']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  getStaff() {\r\n    const staff = { username: localStorage.getItem('username'), id: localStorage.getItem('id') };\r\n    this.staff.next(staff);\r\n    return this.staff.asObservable();\r\n  }\r\n  login(username, password) {\r\n    const body = { username, password };\r\n    return this.http.post(environment.apiUrl + '/authenticate', body).subscribe(async (data: any) => {\r\n      await localStorage.setItem('token', data.jwt);\r\n\r\n      //then get the id of the user\r\n\r\n      return this.http.get(environment.apiUrl + '/user', this.headers).subscribe(async (data: any) => {\r\n        await localStorage.setItem('id', data.id);\r\n        await localStorage.setItem('username', data.username);\r\n\r\n        this.error.next('');\r\n        this.staff.next(data);\r\n        await this.Authenticated();\r\n        await this.router.navigate(['/dashboard']);\r\n\r\n\r\n      });\r\n\r\n    }, (error) => {\r\n      this.error.next(error.status);\r\n    });\r\n  }\r\n  erroLogout(): Observable<any> {\r\n    return this.error.asObservable();\r\n\r\n  }\r\n  logout() {\r\n    localStorage.clear();\r\n    this.Authenticated();\r\n    this.isAgent = false;\r\n    this.hasPower = false;\r\n    this.isVisiteur = false;\r\n    this.isSuperviseur = false;\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  checkAuthError(error) {\r\n    if (error.status === 403 || error.status === 401) {\r\n      this.logout();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooksService {\n  book: Observable<any>;\n  picId;\n  options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body' | 'events' | 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  };\n\n  constructor(\n    private http: HttpClient\n  ) {\n\n  }\n  getGenres() {\n    return this.http.get(environment.apiUrl +'/genres');\n\n  }\n  deleteGenre(id) {\n    return this.http.delete(environment.apiUrl +'/genres/' + id);\n\n  }\n  addGenre(genre) {\n    return this.http.post<any>(environment.apiUrl +'/genres', genre);\n\n  }\n  getBooksByGenre(id) {\n    return this.http.get(environment.apiUrl +'/books/genre/' + id);\n\n  }\n  getBooks() {\n    return this.http.get(environment.apiUrl +'/books');\n\n  }\n  getBook(idbook) {\n    // getOne Books\n    return this.http.get(environment.apiUrl +'/books/' + idbook);\n\n  }\n\n  delete(idbook) {\n    // getOne Books\n    return this.http.delete(environment.apiUrl + '/books/' + idbook);\n\n  }\n\n  upload(event, id) {\n    const path = `${id}`;\n\n  }\n  addBook(book, id) {\n\n    return this.http.post(environment.apiUrl +'/books/' + id , book);\n\n  }\n  borrowBook(pret) {\n    return this.http.post(environment.apiUrl + '/borrows/', pret);\n\n  }\n  getPretBook(idBook) {\n    return this.http.get(environment.apiUrl + '/borrows/book/' + idBook);\n\n  }\n  getAllPrets() {\n    //\n    return this.http.get(environment.apiUrl + '/borrows');\n  }\n\n  rendu(pret) {\n    return this.http.put(environment.apiUrl + '/borrows', pret);\n\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientsService {\n\n  user: Observable<any>;\n  options: {\n    headers?: HttpHeaders | { [header: string]: string | string[] },\n    observe?: 'body' | 'events' | 'response',\n    params?: HttpParams | { [param: string]: string | string[] },\n    reportProgress?: boolean,\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text',\n    withCredentials?: boolean,\n  };\n  picId;\n  constructor(\n    private http: HttpClient) {\n  }\n  getClients() {\n    return this.http.get(environment.apiUrl + '/clients');\n  }\n  getClient(idUser) {\n\n    return this.http.get(environment.apiUrl + '/clients/' + idUser);\n\n  }\n\n  // upload(event, id) {\n  //   return null;\n  // }\n  addClient(client) {\n\n    return this.http.post(environment.apiUrl + '/clients', client);\n  }\n  getAllmyBooks(idUser) {\n    return this.http.get(environment.apiUrl + '/borrows/client/' + 6);\n  }\n}\n","import { AuthService } from '../auth.service';\r\nimport { Router, CanActivate, CanDeactivate } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse, HttpInterceptor } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardDeconnectedService implements CanActivate, HttpInterceptor {\r\n\r\n  constructor(private authS: AuthService, private router: Router) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    console.log(environment.apiUrl + '/authenticate');\r\n\r\n    if (request.url !== (environment.apiUrl + '/authenticate')) {\r\n      console.log(request.url);\r\n\r\n      request = request.clone({\r\n        setHeaders: {\r\n          'Content-Type': 'application/json; charset=utf-8',\r\n          Accept: 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n    }\r\n\r\n\r\n    return next.handle(request);\r\n  }\r\n\r\n  canActivate(): any {\r\n    let state = true;\r\n    this.authS.isAuth.subscribe(auth => {\r\n      if (auth) {\r\n        state = false;\r\n      } else {\r\n        state = true;\r\n      }\r\n    });\r\n    return state;\r\n  }\r\n}\r\n","import { catchError } from 'rxjs/operators';\r\nimport { AuthService } from './../auth.service';\r\nimport { Router, CanActivate, CanDeactivate } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse, HttpInterceptor } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate, HttpInterceptor {\r\n  toasterService: any;\r\n\r\n  constructor(private authS: AuthService, private router: Router) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (request.url !== (environment.apiUrl + '/authenticate')) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n\r\n  canActivate(): boolean {\r\n    this.authS.isAuth.subscribe(auth => {\r\n      if (!auth) {\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      }\r\n    });\r\n    return true;\r\n  }\r\n\r\n  tap(arg0: (evt: any) => void): import('rxjs').OperatorFunction<HttpEvent<any>, unknown> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n  options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  constructor(\n\n  ) { }\n  getAllNotifs() {\n\n    // this.notifCollection = this.afs.collection('Prets'\n    // , ref =>\n    //   ref.where('returnDate', '<=', new Date().toLocaleDateString('fr-FR', this.options))\n    //   .where('rendu', '==', false)\n    //   );\n\n    // const notifs = this.notifCollection.valueChanges();\n    // return notifs;\n    return null;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YXRpc3RpYy9nbG9iYWwtc3RhdHMvZ2xvYmFsLXN0YXRzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-global-stats',\n  templateUrl: './global-stats.component.html',\n  styleUrls: ['./global-stats.component.scss']\n})\nexport class GlobalStatsComponent {\n  month;\n  year;\n  week;\n  barChartOptions = {\n    scaleShowVerticalLines: false,\n    responsive: true\n  };\n  barChartLabels = [this.month];\n  barChartType = 'bar';\n  barChartLegend = true;\n  barChartData = [\n    { data: [65], label: 'Roman' },\n    { data: [28], label: 'Conte' },\n    { data: [65], label: 'Biographie' },\n    { data: [28], label: 'Journal' },\n    { data: [65], label: 'Magasine' },\n    { data: [28], label: 'Bande dessinée' }\n  ];\n\n  displayedColumns: string[] = ['Type', 'totalNumber', 'absentNumber'];\n  ELEMENT_DATA = [\n    { Type: 'Roman', totalNumber: 1.0079, absentNumber: 'H' },\n    { Type: 'Journale', totalNumber: 4.0026, absentNumber: 'He' },\n    { Type: 'Conte', totalNumber: 6.941, absentNumber: 'Li' },\n    { Type: 'Bande dessinée', totalNumber: 9.0122, absentNumber: 'Be' },\n    { Type: 'Biographie', totalNumber: 10.811, absentNumber: 'B' },\n    { Type: 'Magasine', totalNumber: 12.0107, absentNumber: 'C' },\n\n  ];\n  dataSource = this.ELEMENT_DATA; // nescessaire\n\n  constructor() {\n    //\n  }\n\n  onChange(value) {\n    this.barChartLabels = [value];\n    this.month = value;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2FkZC11c2VyL2FkZC11c2VyLmNvbXBvbmVudC5zY3NzIn0= */\";","import { AuthService } from './../../services/auth.service';\nimport { ClientsService } from './../../services/clients.service';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material/dialog';\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  userForm: FormGroup;\n  errorMessage: string;\n  user;\n  $event; // uploaded image\n  picTab: Array<any> = []; // display\n  picSend: (File | Blob)[] = []; // send to firebase\n  message; // for the pic\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    public dialog: MatDialog,\n    private userS: ClientsService,\n    private auth: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.userForm = this.formBuilder.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n    });\n  }\n  onSubmit() {\n    this.user = {\n      firstName: this.userForm.get('firstName').value,\n      lastName: this.userForm.get('lastName').value,\n      enabled: 1,\n      email: this.userForm.get('email').value,\n    };\n\n    this.openDialog();\n  }\n  // upload(event) {\n  //   this.picSend = event.target.files[0];\n  //   const reader = new FileReader();\n  //   const mimeType = event.target.files[0].type;\n  //   if (mimeType.match(/image\\/*/) == null) {\n  //     this.message = 'Only images are supported.';\n  //     return;\n  //   }\n  //   console.log(this.picSend);\n\n  //   reader.readAsDataURL(event.target.files[0]);\n  //   reader.onload = () => {\n  //     this.picTab.push({ image: reader.result });\n  //   };\n  // }\n  openDialog(): void {\n    const dialogRef = this.dialog.open(Dialog, {\n      width: '250px',\n      data: this.user\n    });\n\n    dialogRef.afterClosed().subscribe((data:any) => {\n      if (data === 'ok') {\n        this.userS.addClient(this.user).subscribe(() => {\n         this.router.navigate(['/clients']);\n        },(error) => {\n          this.auth.checkAuthError(error);\n        });\n      }\n    });\n  }\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html'\n})\n// tslint:disable-next-line:component-class-suffix\nexport class Dialog {\n  constructor(\n    public dialogRef: MatDialogRef<Dialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","export default \".img {\\n  width: 50%;\\n  height: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvY2xpZW50L0Q6XFxwcm9qZXRcXGFuZ3VsYXIgcHJvamVjdFxcbmF0aW9uYWxMaWJyYXJ5L3NyY1xcYXBwXFx1c2Vyc1xcY2xpZW50XFxjbGllbnQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3VzZXJzL2NsaWVudC9jbGllbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxVQUFBO0VBQ0EsWUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvdXNlcnMvY2xpZW50L2NsaWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbWd7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgXHJcbn1cclxuIiwiLmltZyB7XG4gIHdpZHRoOiA1MCU7XG4gIGhlaWdodDogYXV0bztcbn0iXX0= */\";","import { AuthService } from './../../services/auth.service';\nimport { BooksService } from 'src/app/services/books.service';\nimport { ClientsService } from './../../services/clients.service';\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nexport interface PeriodicElement {\n  name: string;\n  ID: number;\n  DD: number;\n  DR: string;\n}\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.scss']\n})\nexport class ClientComponent {\n  message = false;\n  id; // idUser\n  User; // user Data\n\n  myBooks;\n\n  constructor(\n    private aR: ActivatedRoute,\n    private auth: AuthService,\n    private userS: ClientsService,\n    private bookS: BooksService\n  ) {\n    this.aR.params.subscribe(params => {\n      this.id = params.id;\n      userS.getClient(this.id).subscribe((data: any) => {\n        this.User = data;\n      }, (error) => {\n        this.auth.checkAuthError(error);\n      });\n    });\n    this.myBooks = [];\n    userS.getAllmyBooks(this.id).subscribe((data: any) => {\n      this.myBooks = data;\n    }\n      , (error) => {\n        this.auth.checkAuthError(error);\n      });\n     this.chargeStatistic();\n  }\n  chargeStatistic() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2NsaWVudHMvY2xpZW50cy5jb21wb25lbnQuc2NzcyJ9 */\";","import { AuthService } from './../../services/auth.service';\nimport { ClientsService } from './../../services/clients.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.scss']\n})\nexport class ClientsComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  sms = true;\n  mail = false;\n  searchForm: FormGroup;\n  searchResults = false;\n  displayedColumns = ['firstName', 'lastName', 'email', 'Action'];\n  errorMessage = false;\n  retrievedUsers;\n  Users = [];\n  datasource;\n  length;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10];\n  constructor(\n    private userS: ClientsService,\n    private route: Router,\n    private formBuilder: FormBuilder,\n    private auth: AuthService\n  ) {\n    this.userS.getClients().subscribe((data: any) => {\n      this.retrievedUsers = data;\n      this.datasource = new MatTableDataSource(data);\n      this.length = data.length;\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n  }\n  showSms() {\n    this.sms = true;\n    this.mail = false;\n  }\n  showMail() {\n    this.sms = false;\n    this.mail = true;\n  }\n  details(idUser) {\n    this.route.navigate(['/client/', idUser]);\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngAfterViewInit() {\n    //\n  }\n  search() {\n    this.Users = [];\n    this.searchResults = false;\n    const letter = this.searchForm\n      .get('letter')\n      .value.toLowerCase()\n      .trim();\n    if (letter === '') {\n      this.errorMessage = true;\n    } else {\n\n      this.retrievedUsers.forEach(async user => {\n        if (user.firstName.toLowerCase().includes(letter) || (user.lastName.toLowerCase().includes(letter))) {\n          this.Users.push(user);\n          this.searchResults = true;\n        }\n      });\n      if (this.Users.length === 0) {\n        this.errorMessage = true;\n      }\n\n    }\n  }\n  initForm() {\n    this.searchForm = this.formBuilder.group({\n      letter: ['', [Validators.required]]\n    });\n    this.Users = [];\n    this.searchResults = false;\n    this.errorMessage = false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080'\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}