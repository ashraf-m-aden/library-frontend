{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/book-dashboard/add-book/add-book.component.html","webpack:///src/app/book-dashboard/add-book/dialog-overview-example-dialog.html","webpack:///src/app/book-dashboard/book-dashboard.component.html","webpack:///src/app/book-dashboard/book/book.component.html","webpack:///src/app/book-dashboard/borrow-book/borrow-book.component.html","webpack:///src/app/book-dashboard/borrowed-book/borrowed-book.component.html","webpack:///src/app/book-dashboard/livres/livres.component.html","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/gestion/genre/genre.component.html","webpack:///src/app/header/header.component.html","webpack:///src/app/login/login.component.html","webpack:///src/app/messages/messages/messages.component.html","webpack:///src/app/messages/single-message/single-message.component.html","webpack:///src/app/notifications/notifications.component.html","webpack:///src/app/statistic/global-stats/global-stats.component.html","webpack:///src/app/users/add-user/add-user.component.html","webpack:///src/app/users/add-user/dialog-overview-example-dialog.html","webpack:///src/app/users/client/client.component.html","webpack:///src/app/users/clients/clients.component.html","webpack:///src/app/angular-material.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.scss","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/book-dashboard/add-book/add-book.component.scss","webpack:///src/app/book-dashboard/add-book/add-book.component.ts","webpack:///src/app/book-dashboard/book-dashboard.component.scss","webpack:///src/app/book-dashboard/book-dashboard.component.ts","webpack:///src/app/book-dashboard/book/book.component.scss","webpack:///src/app/book-dashboard/book/book.component.ts","webpack:///src/app/book-dashboard/borrow-book/borrow-book.component.scss","webpack:///src/app/book-dashboard/borrow-book/borrow-book.component.ts","webpack:///src/app/book-dashboard/borrowed-book/borrowed-book.component.scss","webpack:///src/app/book-dashboard/borrowed-book/borrowed-book.component.ts","webpack:///src/app/book-dashboard/livres/livres.component.scss","webpack:///src/app/book-dashboard/livres/livres.component.ts","webpack:///src/app/dashboard/dashboard.component.scss","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/gestion/genre/genre.component.scss","webpack:///src/app/gestion/genre/genre.component.ts","webpack:///src/app/gestion/gestion.module.ts","webpack:///src/app/gestion/gestion.routing.module.ts","webpack:///src/app/header/header.component.scss","webpack:///src/app/header/header.component.ts","webpack:///src/app/login/login.component.css","webpack:///src/app/login/login.component.ts","webpack:///src/app/messages/messages/messages.component.scss","webpack:///src/app/messages/messages/messages.component.ts","webpack:///src/app/messages/single-message/single-message.component.scss","webpack:///src/app/messages/single-message/single-message.component.ts","webpack:///src/app/notifications/notifications.component.scss","webpack:///src/app/notifications/notifications.component.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/books.service.ts","webpack:///src/app/services/clients.service.ts","webpack:///src/app/services/guards/auth-guard-deconnected.service.ts","webpack:///src/app/services/guards/auth-guard.service.ts","webpack:///src/app/services/notifications.service.ts","webpack:///src/app/statistic/global-stats/global-stats.component.scss","webpack:///src/app/statistic/global-stats/global-stats.component.ts","webpack:///src/app/users/add-user/add-user.component.scss","webpack:///src/app/users/add-user/add-user.component.ts","webpack:///src/app/users/client/client.component.scss","webpack:///src/app/users/client/client.component.ts","webpack:///src/app/users/clients/clients.component.scss","webpack:///src/app/users/clients/clients.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AngularMaterialModule","declarations","imports","routes","path","redirectTo","pathMatch","component","canActivate","components","AppRoutingModule","forRoot","AppComponent","router","auth","title","Authenticated","selector","template","AppModule","entryComponents","providers","provide","useClass","multi","bootstrap","AddBookComponent","formBuilder","dialog","bookS","picTab","picSend","getGenres","subscribe","data","genres","error","checkAuthError","initForm","bookForm","group","required","author","year","genre","book","get","value","enabled","image","disponible","idGenre","openDialog","dialogRef","open","Dialog","width","afterClosed","addBook","navigate","close","BookDashboardComponent","route","searchResults","displayedColumns","Books","pageSize","pageSizeOptions","allBooks","specificBooks","getBooks","datasource","length","sort","paginator","letter","searchForm","toLowerCase","trim","errorMessage","forEach","includes","push","idBook","bookGenreId","status","alert","changes","BookComponent","aR","borrow","params","getBook","getPretBook","results","prets","console","log","BorrowBookComponent","userS","borrowed","isLinear","selected","errorDate","myFilter","d","day","Date","getDay","currentYear","getFullYear","currentMonth","getMonth","currentDay","getDate","minDate","maxDate","initsearchForm","borrowForm","returnDate","event","options","weekday","month","date","toLocaleDateString","Pret","userId","localStorage","getItem","bookId","clientId","choosenUser","borrowDate","returned","borrowBook","emit","Users","getClients","user","firstName","lastName","BorrowedBookComponent","formbuilder","getAllPrets","pret","rendu","Prets","searchPrets","LivresComponent","getBooksByGenre","genreId","books","DashboardComponent","elementRef","client","name","series","view","legend","showLabels","animations","xAxis","yAxis","showYAxisLabel","showXAxisLabel","xAxisLabel","yAxisLabel","timeline","clientNumber","bookNumber","borrowBookNumber","colorScheme","domain","Object","assign","userName","filter","isAuth","JSON","parse","stringify","GenreComponent","genreForm","description","Genre","addGenre","deleteGenre","GestionModule","forChild","routesG","GestionRoutingModule","HeaderComponent","notifS","matBadge","logout","LoginComponent","authS","isLoading","login","email","password","erroLogout","MessagesComponent","SingleMessageComponent","mail","sms","NotificationsComponent","getAllNotifs","AuthService","http","staff","isSuperviseur","hasPower","isAgent","isVisiteur","headers","set","next","asObservable","state","username","body","post","apiUrl","setItem","jwt","clear","providedIn","BooksService","idbook","put","ClientsService","idUser","AuthGuardDeconnectedService","request","url","clone","setHeaders","Accept","Authorization","handle","AuthGuardService","arg0","NotificationsService","GlobalStatsComponent","barChartOptions","scaleShowVerticalLines","responsive","barChartLabels","barChartType","barChartLegend","barChartData","label","ELEMENT_DATA","Type","totalNumber","absentNumber","dataSource","AddUserComponent","userForm","addClient","ClientComponent","message","getClient","User","myBooks","getAllmyBooks","chargeStatistic","ClientsComponent","retrievedUsers","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \" <div id=\\\"content\\\" class=\\\"container-fluid\\\">\\n<app-header></app-header>\\n  <router-outlet></router-outlet>\\n\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <div class=\\\"card\\\">\\n      <h4 class=\\\"card-title card-header bg-dark text-light\\\">\\n        Ajouter un livre\\n      </h4>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <div class=\\\"card\\\">\\n      <form [formGroup]=\\\"bookForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 form-group\\\">\\n            <mat-form-field>\\n              <input matInput formControlName=\\\"title\\\" placeholder=\\\"Titre\\\" />\\n            </mat-form-field>\\n\\n          </div>\\n          <div class=\\\"col-md-4 form-group\\\">\\n            <mat-form-field>\\n              <input matInput formControlName=\\\"author\\\" placeholder=\\\"Auteur\\\" />\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 form-group\\\">\\n            <mat-form-field>\\n              <input matInput formControlName=\\\"year\\\" placeholder=\\\"Année\\\" type=\\\"number\\\" />\\n            </mat-form-field>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12 form-group\\\">\\n            <label>Genre</label>\\n            <mat-form-field>\\n              <mat-select matInput formControlName=\\\"genre\\\" name=\\\"Genre\\\" id=\\\"genre\\\">\\n                <mat-option *ngFor=\\\"let genre of genres\\\" [value]=\\\"genre.id\\\">{{\\n                  genre.name\\n                }}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <!-- <div class=\\\"form-group\\\" id=\\\"pic\\\">\\n              <label for=\\\"file\\\" class=\\\"disappear\\\">Ajouter une photo</label>\\n              <input type=\\\"file\\\" class=\\\"disappear\\\" (change)=\\\"upload($event)\\\" accept=\\\".png,.jpg\\\" />\\n            </div> -->\\n            <br>\\n            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\" [disabled]=\\\"bookForm.invalid\\\"\\n              class=\\\" center\\\">\\n              Ajouter le livre\\n            </button>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<h4 mat-dialog-title>Notification</h4>\\n<div mat-dialog-content>\\n  <p>Etes vous sûr d'enregistrer {{data.title}} ?</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">Annuler</button>\\n  <button mat-button (click)=\\\"save()\\\" cdkFocusInitial>Enregistrer</button>\\n</div>\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-2 card bg-dark text-light\\\" style=\\\"margin-top: 10px;\\\">\\n    <h5 type=\\\"button\\\" class=\\\"card-header\\\" (click)=\\\"displayAll()\\\">\\n      Tous les livres\\n    </h5>\\n    <div class=\\\"dropdown-divider\\\"></div>\\n    <ul class=\\\"list-group\\\">\\n      <li\\n        type=\\\"button\\\"\\n        class=\\\" list-group-item bg-dark btn-outline-danger text-light\\\"\\n        *ngFor=\\\"let genre of genres\\\"\\n        (click)=\\\"display(genre.id)\\\"\\n      >\\n        {{ genre.name }}\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-10\\\">\\n    <div *ngIf=\\\"allBooks\\\" class=\\\"row\\\">\\n      <div class=\\\"col-sm-12 col-md-12\\\">\\n        <div class=\\\"card\\\">\\n          <h4 class=\\\"card-header bg-dark text-light\\\">Livres</h4>\\n          <div class=\\\"card-body menuB\\\">\\n            <button\\n              class=\\\"btn  mat-raised-button btn-success \\\"\\n              routerLink=\\\"/addBook\\\"\\n            >\\n              Ajouter un livre\\n            </button>\\n            <button\\n              class=\\\"btn  mat-raised-button btn-outline-danger\\\"\\n              routerLink=\\\"/borrowedBook\\\"\\n            >\\n              Livres empreintés\\n            </button>\\n          </div>\\n          <form class=\\\"form-check-inline card-body\\\" [formGroup]=\\\"searchForm\\\">\\n            <input\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"letter\\\"\\n              type=\\\"text\\\"\\n              placeholder=\\\"Rechercher un livre\\\"\\n              aria-label=\\\"Rechercher\\\"\\n            />\\n            <button\\n              class=\\\"btn btn-outline-success\\\"\\n              type=\\\"submit\\\"\\n              [disabled]=\\\"searchForm.invalid\\\"\\n              (click)=\\\"search()\\\"\\n            >\\n              Rechercher\\n            </button>\\n            <button\\n              class=\\\"btn btn-outline-danger\\\"\\n              [disabled]=\\\"searchForm.invalid\\\"\\n              (click)=\\\"initForm()\\\"\\n            >\\n              Effacer\\n            </button>\\n          </form>\\n          <button class=\\\"btn btn-group btn-danger\\\" *ngIf=\\\"errorMessage && !searchResults\\\">\\n            Aucun livre trouvé\\n          </button>\\n          <div *ngIf=\\\"searchResults\\\">\\n            <table class=\\\"table table-striped\\\">\\n              <thead>\\n                <tr>\\n                  <th scope=\\\"col\\\">#</th>\\n                  <th scope=\\\"col\\\">Nom</th>\\n                  <th scope=\\\"col\\\">Action</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let book of Books; let i = index\\\">\\n                  <td>{{ i + 1 }}</td>\\n                  <td>{{ book.title }}</td>\\n                  <td>\\n                    <button\\n                      (click)=\\\"details(book.idBook)\\\"\\n                      class=\\\"btn btn-group btn-outline-primary\\\"\\n                    >\\n                      Consulter\\n                    </button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div class=\\\"col-sm-12 col-md-12\\\" *ngIf=\\\"search\\\">\\n            <mat-paginator\\n              [length]=\\\"length\\\"\\n              [pageSize]=\\\"pageSize\\\"\\n              [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n              showFirstLastButtons\\n            >\\n            </mat-paginator>\\n            <div class=\\\"example-container mat-elevation-z8\\\">\\n              <mat-table [dataSource]=\\\"datasource\\\" matSort>\\n                <!-- ID Column -->\\n                <ng-container matColumnDef=\\\"title\\\">\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\\n                    Titre\\n                  </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{ row.title }} </mat-cell>\\n                </ng-container>\\n\\n                <!-- Progress Column -->\\n                <ng-container matColumnDef=\\\"author\\\">\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\\n                    Auteur\\n                  </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{ row.author }} </mat-cell>\\n                </ng-container>\\n\\n                <!-- Name Column -->\\n                <ng-container matColumnDef=\\\"genre\\\">\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\\n                    Genre\\n                  </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\"> {{ row.genre.name }} </mat-cell>\\n                </ng-container>\\n                <!-- action Column -->\\n                <ng-container matColumnDef=\\\"Action\\\">\\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>\\n                    Action\\n                  </mat-header-cell>\\n                  <mat-cell *matCellDef=\\\"let row\\\" class=\\\"d-flex justify-content-around\\\">\\n                    <button\\n                      [routerLink]=\\\"['/book', row.id]\\\"\\n                      class=\\\"btn btn-outline-info small p-2\\\"\\n                    >\\n                      Check\\n                    </button>\\n                    <button\\n                 (click)=\\\"delete(row.id)\\\"\\n                    class=\\\"btn btn-danger small p-2\\\"\\n                  >\\n                    Delete\\n                  </button>\\n                  </mat-cell>\\n                </ng-container>\\n\\n                <mat-header-row\\n                  *matHeaderRowDef=\\\"displayedColumns\\\"\\n                ></mat-header-row>\\n                <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\">\\n                </mat-row>\\n              </mat-table>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <app-livres *ngIf=\\\"specificBooks\\\" [genreId]=\\\"bookGenreId\\\"></app-livres>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12 col-md-4\\\">\\r\\n    <div class=\\\"card card-profile\\\">\\r\\n      <div class=\\\"card-avatar imgWrapper\\\">\\r\\n        <img class=\\\"imgCarousel\\\" [src]=\\\"book?.image\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h6 class=\\\"card-category text-gray\\\">{{ book?.idCDC }} -- Status: <span *ngIf=\\\"book?.disponible == 1\\\" class=\\\"text-success\\\">Disponible</span>\\r\\n            <span class=\\\"text-danger\\\" *ngIf=\\\"book?.disponible !==1\\\">Non disponible</span></h6>\\r\\n        <h4 class=\\\"card-title\\\">{{ book?.title }}</h4>\\r\\n        Auteur: {{ book?.author }} <br />\\r\\n        Année: {{ book?.year }} <br />\\r\\n        Genre: {{ book?.genre.name }}<br />\\r\\n\\r\\n        <a *ngIf=\\\"book?.disponible\\\"\\r\\n          class=\\\"btn btn-danger btn-round\\\"\\r\\n          (click)=\\\"borrow = true\\\"\\r\\n          >Preter</a\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-12 col-md-8\\\">\\r\\n    <mat-toolbar>\\r\\n      Historique du Livre\\r\\n    </mat-toolbar>\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n      <thead>\\r\\n        <tr class=\\\" small\\\">\\r\\n          <th scope=\\\"col\\\">#</th>\\r\\n          <th scope=\\\"col\\\">Empreinté par</th>\\r\\n          <th scope=\\\"col\\\">Date d'empeint</th>\\r\\n          <th scope=\\\"col\\\">Date de retour</th>\\r\\n          <th scope=\\\"col\\\">Preté par</th>\\r\\n          <th scope=\\\"col\\\">Rendu</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let pret of prets; let i = index\\\" class=\\\"small\\\">\\r\\n          <td>{{ i + 1 }}</td>\\r\\n          <td>{{ pret?.client.firstName }} {{ pret?.client.lastName }}</td>\\r\\n          <td>{{ pret?.borrowDate }}</td>\\r\\n          <td>{{ pret?.returnDate }}</td>\\r\\n          <td>{{ pret?.user.username }}</td>\\r\\n          <td *ngIf=\\\"pret?.returned === 1\\\" class=\\\" bg-success text-light\\\">Oui</td>\\r\\n          <td *ngIf=\\\"pret?.returned === 0\\\" class=\\\" bg-danger text-light\\\">Non</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <app-borrow-book *ngIf=\\\"borrow\\\" [book]=\\\"book\\\" (borrowed)=\\\"borrow = false;\\\"></app-borrow-book>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"col-md-12\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header card-header-danger\\\">\\n      <p class=\\\"card-category\\\">Enregistrer un empreint</p>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <form [formGroup]=\\\"borrowForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <form [formGroup]=\\\"searchForm\\\">\\n              <input\\n                class=\\\"form-control\\\"\\n                formControlName=\\\"letter\\\"\\n                type=\\\"text\\\"\\n                placeholder=\\\"Rechercher un abonné\\\"\\n                aria-label=\\\"Rechercher\\\"\\n              />\\n              <button\\n                class=\\\"btn btn-outline-success\\\"\\n                type=\\\"submit\\\"\\n                [disabled]=\\\"searchForm.invalid\\\"\\n                (click)=\\\"search()\\\"\\n              >\\n                Rechercher\\n              </button>\\n              <button\\n                class=\\\"btn btn-outline-danger\\\"\\n                [disabled]=\\\"searchForm.invalid\\\"\\n                (click)=\\\"initsearchForm()\\\"\\n              >\\n                Effacer\\n              </button>\\n            </form>\\n            <div *ngIf=\\\"searchResults\\\">\\n              <table class=\\\"table table-striped\\\">\\n                <thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\">#</th>\\n                    <th scope=\\\"col\\\">Prenom</th>\\n                    <th scope=\\\"col\\\">Nom</th>\\n                    <th scope=\\\"col\\\">Action</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let user of Users; let i = index\\\">\\n                    <td>{{ i + 1 }}</td>\\n                    <td>{{ user.firstName }}</td>\\n                    <td>{{ user.lastName }}</td>\\n                    <td>\\n                      <button\\n                        (click)=\\\"choose(user)\\\"\\n                        class=\\\"btn btn-group btn-outline-primary\\\"\\n                      >\\n                        Choisir\\n                      </button>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n            <div *ngIf=\\\"selected\\\">\\n              <table class=\\\"table table-striped\\\">\\n                <thead>\\n                  <tr>\\n                    <th scope=\\\"col\\\">#</th>\\n                    <th scope=\\\"col\\\">Prenom</th>\\n                    <th scope=\\\"col\\\">Nom</th>\\n                    <th scope=\\\"col\\\">Action</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr>\\n                    <td>1</td>\\n                    <td>{{ choosenUser?.firstName }}</td>\\n                    <td>{{ choosenUser?.lastName }}</td>\\n                    <td>\\n                      <button (click)=\\\"resetUser()\\\">Reset</button>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n            <button class=\\\"btn btn-group btn-danger\\\" *ngIf=\\\"errorMessage\\\">\\n              Cet utilisateur n'existe pas\\n            </button>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"form-group\\\">\\n                <input\\n                  matInput\\n                  placeholder=\\\"Choisir la date de retour\\\"\\n                  [matDatepicker]=\\\"picker\\\"\\n                  formControlName=\\\"returnDate\\\"\\n                  matInput\\n                  [min]=\\\"minDate\\\"\\n                  [max]=\\\"maxDate\\\"\\n                  readonly\\n                />\\n                <mat-datepicker-toggle\\n                  matSuffix\\n                  [for]=\\\"picker\\\"\\n                ></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n              </mat-form-field>\\n              <button class=\\\"btn btn-group btn-danger\\\" *ngIf=\\\"errorDate\\\">\\n                Date incorrect\\n              </button>\\n            </div>\\n\\n            <button\\n              mat-raised-button\\n              type=\\\"submit\\\"\\n              class=\\\"btn btn-danger pull-right\\\"\\n              [disabled]=\\\"borrowForm.invalid\\\"\\n            >\\n              Confirmer l'empreint\\n            </button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8\\\">\\n    <div class=\\\"card\\\">\\n      <h4 class=\\\"card-header bg-dark text-light\\\">Recherche de livres</h4>\\n\\n  <form [formGroup]=\\\"searchForm\\\" class=\\\" card-body form-check-inline\\\">\\n    <input\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"letter\\\"\\n      type=\\\"text\\\"\\n      placeholder=\\\"Rechercher un livre preté\\\"\\n      aria-label=\\\"Rechercher\\\"\\n    />\\n    <button\\n      class=\\\"btn btn-outline-success\\\"\\n      type=\\\"submit\\\"\\n      [disabled]=\\\"searchForm.invalid\\\"\\n      (click)=\\\"search()\\\"\\n    >\\n      Rechercher\\n    </button>\\n    <button\\n      class=\\\"btn btn-outline-danger\\\"\\n      [disabled]=\\\"searchForm.invalid\\\"\\n      (click)=\\\"initsearchForm()\\\"\\n    >\\n      Effacer\\n    </button>\\n  </form>\\n  <button class=\\\"btn btn-group btn-danger\\\" *ngIf=\\\"errorMessage\\\">Aucun livre trouvé</button>\\n</div>\\n  <table class=\\\"table table-striped\\\" *ngIf=\\\"searchResults\\\">\\n    <thead>\\n      <tr class=\\\" small\\\">\\n        <th scope=\\\"col\\\">#</th>\\n        <th scope=\\\"col\\\">Titre</th>\\n        <th scope=\\\"col\\\">Genre</th>\\n        <th scope=\\\"col\\\">Empreinté par</th>\\n        <th scope=\\\"col\\\">Date d'empeint</th>\\n        <th scope=\\\"col\\\">Date de retour</th>\\n        <th scope=\\\"col\\\">Preté par</th>\\n        <th scope=\\\"col\\\">Rendu</th>\\n        <th scope=\\\"col\\\">Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let pret of searchPrets; let i = index\\\" class=\\\"small\\\">\\n\\n        <td>{{ i + 1 }}</td>\\n        <td>{{ pret?.book?.title }}</td>\\n        <td>{{ pret?.book?.genre?.name }}</td>\\n        <td>{{ pret?.client?.firstName }}</td>\\n        <td>{{ pret?.borrowDate }}</td>\\n        <td>{{ pret?.returnDate }}</td>\\n        <td>{{ pret?.user?.username }}</td>\\n        <td *ngIf=\\\"pret?.rendu\\\">Oui</td>\\n        <td *ngIf=\\\"!pret?.rendu\\\">Non</td>\\n        <td class=\\\"d-flex flex-row\\\">\\n          <button class=\\\"btn btn-group  btn-success\\\" *ngIf=\\\"pret?.returned === 0\\\" (click)=\\\"rendu(pret)\\\">Rendu</button>\\n          <button  class=\\\"btn btn-group  btn-danger\\\" *ngIf=\\\"pret?.returned === 0\\\" (click)=\\\"notifier()\\\">Notifier</button>\\n          <button  class=\\\"btn btn-group  btn-info\\\" *ngIf=\\\"pret?.returned === 1\\\" (click)=\\\"check(pret?.book?.id)\\\">Check</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n  </div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8\\\">\\n    <h4 class=\\\"card-header\\\">Tous les livres empreintés</h4>\\n\\n    <table class=\\\"table table-striped\\\">\\n      <thead>\\n        <tr class=\\\" small\\\">\\n          <th scope=\\\"col\\\">#</th>\\n          <th scope=\\\"col\\\">Titre</th>\\n          <th scope=\\\"col\\\">Genre</th>\\n          <th scope=\\\"col\\\">Empreinté par</th>\\n          <th scope=\\\"col\\\">Date d'empeint</th>\\n          <th scope=\\\"col\\\">Date de retour</th>\\n          <th scope=\\\"col\\\">Preté par</th>\\n          <th scope=\\\"col\\\">Rendu</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let pret of Prets; let i = index\\\" class=\\\"small\\\">\\n          <td>{{ i + 1 }}</td>\\n          <td>{{ pret?.book?.title }}</td>\\n          <td>{{ pret?.book?.genre?.name }}</td>\\n          <td>{{ pret?.client?.firstName }}</td>\\n          <td>{{ pret?.borrowDate }}</td>\\n          <td>{{ pret?.returnDate }}</td>\\n          <td>{{ pret?.user?.username }}</td>\\n          <td *ngIf=\\\"pret?.returned === 1\\\">Oui</td>\\n          <td *ngIf=\\\"pret?.returned === 0\\\">Non</td>\\n\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <div class=\\\"card\\\">\\n      <mat-paginator\\n        [length]=\\\"length\\\"\\n        [pageSize]=\\\"pageSize\\\"\\n        [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n        showFirstLastButtons\\n      >\\n      </mat-paginator>\\n      <div class=\\\"example-container mat-elevation-z8 card-body\\\">\\n        <mat-table [dataSource]=\\\"datasource\\\" matSort>\\n          <!-- ID Column -->\\n          <ng-container matColumnDef=\\\"title\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Nom\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.title }} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Progress Column -->\\n          <ng-container matColumnDef=\\\"author\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Auteur\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.author }} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"year\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Année\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.year }} </mat-cell>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"Action\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Action\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">\\n              <button\\n                [routerLink]=\\\"['/book', row.id]\\\"\\n                class=\\\"btn btn-outline-info\\\"\\n              >\\n                Consulter\\n              </button>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"> </mat-row>\\n        </mat-table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"dashboard\\\">\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"isAuth\\\">\\r\\n    <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n      <div class=\\\"card card-stats border-success\\\">\\r\\n        <div class=\\\"card-body d-flex justify-content-between border-success \\\">\\r\\n          <div>\\r\\n            <img src=\\\"../../assets/img/books.png\\\" alt=\\\"\\\" style=\\\"height: 50px;width: 50px;\\\" />\\r\\n          </div>\\r\\n          <div class=\\\" text-right\\\">\\r\\n            <h6 class=\\\" card-subtitle text-secondary\\\">Nombre de livres total</h6>\\r\\n            <h4 class=\\\"card-title\\\">{{bookNumber}}</h4>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer border-success \\\">\\r\\n          <hr class=\\\"border-success\\\" />\\r\\n          <button class=\\\"btn btn-group mat-raised-button btn-success\\\" routerLink=\\\"/bookDashboard\\\">\\r\\n            Consulter\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n      <div class=\\\"card card-stats border-info\\\">\\r\\n        <div class=\\\"card-body d-flex justify-content-between border-info \\\">\\r\\n          <div>\\r\\n            <img src=\\\"../../assets/img/users.png\\\" alt=\\\"\\\" style=\\\"height: 50px;width: 50px;\\\" />\\r\\n          </div>\\r\\n          <div class=\\\" text-right\\\">\\r\\n            <h6 class=\\\" card-subtitle text-secondary\\\">Nombre d'abonnés</h6>\\r\\n            <h4 class=\\\"card-title\\\">{{clientNumber}}</h4>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer border-info \\\">\\r\\n          <hr class=\\\"border-success\\\" />\\r\\n          <button class=\\\"btn btn-group mat-raised-button btn-info\\\" routerLink=\\\"/clients\\\">\\r\\n            Consulter\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n      <div class=\\\"card card-stats border-success\\\">\\r\\n        <div class=\\\"card-body d-flex justify-content-between border-danger \\\">\\r\\n          <div>\\r\\n            <img src=\\\"../../assets/img/bookabsent.png\\\" alt=\\\"\\\" style=\\\"height: 50px;width: 50px;\\\" />\\r\\n          </div>\\r\\n          <div class=\\\" text-right\\\">\\r\\n            <h6 class=\\\" card-subtitle text-secondary\\\">Livres empreintés</h6>\\r\\n            <h4 class=\\\"card-title\\\">{{borrowBookNumber}}</h4>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer border-danger \\\">\\r\\n          <hr class=\\\"border-danger\\\" />\\r\\n          <button class=\\\"btn btn-group mat-raised-button btn-danger\\\" routerLink=\\\"/borrowedBook\\\">\\r\\n            Consulter\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n      <div class=\\\"card card-stats border-warning\\\">\\r\\n        <div class=\\\"card-body d-flex justify-content-between border-warning \\\">\\r\\n          <div>\\r\\n            <img src=\\\"../../assets/img/cdc.png\\\" alt=\\\"\\\" style=\\\"height: 50px;width: 50px;\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer border-warning \\\">\\r\\n          Connecté en tant que : {{userName}}\\r\\n          <hr class=\\\"border-warning\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 info\\\">\\r\\n      <p>Hello, this is a little application I made to show off my Angular9 and springBoot skills.\\r\\n      </p>\\r\\n<p>It's a debut of a library application. In this little application, you can create new client, new types of books(genres) and then attribute some books to those types.\\r\\n  Client can borrow books and you can register a book as \\\"returned\\\" if the client give it back.</p>\\r\\n\\r\\n<p>For the front-end I used Angular, bootstrap, Angular material and a chart. This app had firebase as a backend before to execute CRUD operations, but i changed it to Spring boot.\\r\\n</p>\\r\\n<p>The back-end now, use spring-rest, spring-data-jpa, hibernate, spring-security and jwt.\\r\\n  But to visit, you have to authenticate first!</p>\\r\\n<table class=\\\"table col-md-3\\\">\\r\\n  <tr>\\r\\n    <td class=\\\"font-weight-bold\\\">username:</td>\\r\\n    <td>ashraf</td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td class=\\\"font-weight-bold\\\">password:</td>\\r\\n    <td>spring-boot</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n PS: the app is in French, I hope you don't get lost.\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <div class=\\\"card \\\">\\r\\n        <div class=\\\"card-header \\\">\\r\\n          <h5 class=\\\"card-title\\\">Historiques</h5>\\r\\n          <p class=\\\"card-category\\\">Les dernieres interactions</p>\\r\\n        </div>\\r\\n        <div class=\\\"card-body \\\">\\r\\n          <canvas id=\\\"chartEmail\\\"></canvas>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <div class=\\\"card card-chart\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <h5 class=\\\"card-title\\\">Livres</h5>\\r\\n          <p class=\\\"card-category\\\">Frequence d'empreint des livres</p>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <ngx-charts-line-chart style=\\\"min-width: 100%; height: 100%;\\\" [view]=\\\"view\\\" [scheme]=\\\"colorScheme\\\"\\r\\n            [legend]=\\\"legend\\\" [showXAxisLabel]=\\\"showXAxisLabel\\\" [showYAxisLabel]=\\\"showYAxisLabel\\\" [xAxis]=\\\"xAxis\\\"\\r\\n            [yAxis]=\\\"yAxis\\\" [xAxisLabel]=\\\"xAxisLabel\\\" [yAxisLabel]=\\\"yAxisLabel\\\" [timeline]=\\\"timeline\\\" [results]=\\\"multi\\\"\\r\\n            (select)=\\\"onSelect($event)\\\" (activate)=\\\"onActivate($event)\\\" (deactivate)=\\\"onDeactivate($event)\\\">\\r\\n          </ngx-charts-line-chart>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div> -->\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8\\\">\\n    <div class=\\\"card\\\">\\n      <h4 class=\\\"card-header bg-dark text-light\\\">Genre de litteratures</h4>\\n      <form class=\\\"form-check-inline card-body\\\" [formGroup]=\\\"genreForm\\\">\\n        <div class=\\\"row\\\">\\n          <input class=\\\"form-control col-sm-12 col-md-4\\\" formControlName=\\\"name\\\" type=\\\"text\\\"\\n            placeholder=\\\"Nom du genre\\\" />\\n          <textarea class=\\\"form-control col-sm-12 col-md-9\\\" formControlName=\\\"description\\\" type=\\\"text\\\"\\n            placeholder=\\\"Description du genre\\\"></textarea>\\n        </div>\\n        <button class=\\\"btn btn-outline-success\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\">\\n          Ajouter\\n        </button>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-10\\\">\\n    <div class=\\\"card\\\">\\n      <mat-paginator [length]=\\\"length\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\" showFirstLastButtons>\\n      </mat-paginator>\\n      <div class=\\\"example-container mat-elevation-z8 card-body\\\">\\n        <mat-table [dataSource]=\\\"datasource\\\" matSort>\\n          <!-- ID Column -->\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Nom\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.name }} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Progress Column -->\\n          <ng-container matColumnDef=\\\"description\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Description\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.description }} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"Action\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Action\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">\\n              <button class=\\\"btn btn-group btn-danger\\\" (click)=\\\"delete(row.id)\\\">\\n                Supprimer\\n              </button>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"> </mat-row>\\n        </mat-table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">\\n    <img\\n      src=\\\"../../assets/img/logobook.png\\\"\\n      width=\\\"40\\\"\\n      height=\\\"30\\\"\\n      alt=\\\"Site logo\\\"\\n  /></a>\\n  <button\\n    class=\\\"navbar-toggler\\\"\\n    type=\\\"button\\\"\\n    data-toggle=\\\"collapse\\\"\\n    data-target=\\\"#navbarContent\\\"\\n  >\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarContent\\\">\\n    <ul class=\\\"navbar-nav list-inline\\\">\\n      <li class=\\\"nav-item active list-inline-item\\\">\\n        <a class=\\\"nav-link text-light\\\" [routerLink]=\\\"['/dashboard']\\\">Acceuil</a>\\n      </li>\\n      <li class=\\\"nav-item list-inline-item\\\">\\n        <a class=\\\"nav-link text-light\\\" [routerLink]=\\\"['/clients']\\\">Abonnés</a>\\n      </li>\\n      <li class=\\\"nav-item list-inline-item\\\">\\n        <div class=\\\"dropdown\\\">\\n          <a\\n            class=\\\"nav-link text-light\\\"\\n            id=\\\"dropdownMenu2\\\"\\n            data-toggle=\\\"dropdown\\\"\\n            aria-haspopup=\\\"true\\\"\\n            aria-expanded=\\\"false\\\"\\n            >Livres</a\\n          >\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdown\\\">\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/bookDashboard\\\" >Tous les livres</a>\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/addBook\\\">Ajouter un livre</a>\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/borrowedBook\\\">Livres empreintés</a>\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/genre\\\"\\n            >Genre de litteratures</a\\n          >\\n          </div>\\n        </div>\\n      </li>\\n      <!-- <li class=\\\"nav-item list-inline-item\\\">\\n        <div class=\\\"dropdown\\\">\\n          <a\\n            class=\\\"nav-link text-light\\\"\\n            id=\\\"dropdownMenu2\\\"\\n            data-toggle=\\\"dropdown\\\"\\n            aria-haspopup=\\\"true\\\"\\n            aria-expanded=\\\"false\\\"\\n          >\\n            Gestion</a\\n          >\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdown\\\">\\n            <a class=\\\"dropdown-item\\\" >Super Admin</a>\\n            <a class=\\\"dropdown-item\\\" >Admin</a>\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/allCDC\\\">CDC</a>\\n\\n          </div>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item list-inline-item\\\">\\n        <div class=\\\"dropdown\\\">\\n          <a\\n            class=\\\"nav-link text-light\\\"\\n            id=\\\"dropdownMenu2\\\"\\n            data-toggle=\\\"dropdown\\\"\\n            aria-haspopup=\\\"true\\\"\\n            aria-expanded=\\\"false\\\"\\n          >\\n            Historiques</a\\n          >\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdown\\\">\\n            <a class=\\\"dropdown-item\\\" >Pret</a>\\n            <a class=\\\"dropdown-item\\\" >Retour</a>\\n            <a class=\\\"dropdown-item\\\" >Ajout</a>\\n            <a class=\\\"dropdown-item\\\" >Suppression</a>\\n          </div>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item list-inline-item\\\">\\n        <a class=\\\"nav-link text-light\\\">Statistiques</a>\\n      </li> -->\\n    </ul>\\n    <div class=\\\"filler\\\"></div>\\n    <ul class=\\\"navbar-nav list-inline\\\">\\n      <!-- <li class=\\\"nav-item list-inline-item\\\">\\n      <div matBadgeOverlap=\\\"true\\\" matBadgePosition=\\\"above after\\\" [matBadge]=\\\"matBadge\\\" [matBadgeHidden]=\\\"matBadge == 0\\\" routerLink=\\\"/notification\\\" matBadgeColor=\\\"warn\\\">\\n        <img  src=\\\"../../assets/img/bell.png\\\"\\n        style=\\\"height: 30px; width: 30px;\\\">\\n      </div>\\n      </li> -->\\n      <li class=\\\"nav-item list-inline-item\\\">\\n        <a class=\\\"nav-link text-light\\\" [routerLink]=\\\"['/login']\\\" *ngIf=\\\"!isAuth\\\">Connexion</a>\\n      </li><li class=\\\"nav-item list-inline-item\\\">\\n        <a class=\\\"nav-link text-light\\\" *ngIf=\\\"isAuth\\\" (click)=\\\"logout()\\\">Deconnexion</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\";","export default \"  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-12 text-center\\\">\\r\\n      <img class=\\\"mx-2\\\" src=\\\"../../assets/img/logobook.png\\\" width=\\\"50\\\" alt=\\\"Library logo\\\" />\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-12 col-md-5 card p-5 border-info\\\">\\r\\n      <h4>Connection</h4>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-check-label small font-italic font-weight-bold\\\">Votre email</label>\\r\\n          <input id=\\\"email\\\" [(ngModel)]=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"email\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-check-label small font-italic font-weight-bold\\\">Votre mot de passe</label>\\r\\n          <input id=\\\"password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"mot de passe\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group d-flex\\\">\\r\\n          <button *ngIf=\\\"!isLoading\\\" class=\\\"btn btn-group btn-outline-warning text-primary\\\" (click)=\\\"submit()\\\">\\r\\n            Connection\\r\\n          </button>\\r\\n          <button *ngIf=\\\"isLoading\\\" class=\\\"btn btn-group btn-outline-warning text-primary\\\" disabled>\\r\\n            <mat-spinner diameter=30></mat-spinner>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <span class=\\\"text-danger bg-white rounded-pill text-center\\\">{{error}}</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <mat-toolbar>\\n      <button class=\\\"btn btn-outline-success\\\">Envoyer un message</button>\\n      <button class=\\\"btn btn-outline-primary\\\">Envoyer un mail</button>\\n    </mat-toolbar>\\n  </div>\\n  <div class=\\\"col-md-6 col-sm-12\\\">\\n    <form>\\n      <mat-form-field class=\\\"form-group\\\">\\n        <textarea\\n          matInput\\n          placeholder=\\\"Ecrivez votre mail\\\"\\n          type=\\\"text\\\"\\n          name=\\\"\\\"\\n          id=\\\"\\\"\\n          cols=\\\"30\\\"\\n          rows=\\\"10\\\"\\n        ></textarea>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form-group\\\">\\n        <textarea\\n          matInput\\n          placeholder=\\\"Ecrivez votre sms\\\"\\n          type=\\\"text\\\"\\n          name=\\\"\\\"\\n          id=\\\"\\\"\\n          cols=\\\"30\\\"\\n          rows=\\\"10\\\"\\n        ></textarea>\\n      </mat-form-field>\\n    </form>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <div class=\\\"d-flex sm\\\">\\n      <button class=\\\"btn btn-outline-success\\\" (click)=\\\"showSms()\\\">\\n        Envoyer un message\\n      </button>\\n      <button class=\\\"btn btn-outline-primary\\\" (click)=\\\"showMail()\\\">\\n        Envoyer un mail\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-6 col-sm-12\\\">\\n    <form *ngIf=\\\"mail\\\">\\n      <mat-form-field class=\\\"form-group\\\">\\n        <textarea\\n          matInput\\n          placeholder=\\\"Ecrivez votre mail\\\"\\n          type=\\\"text\\\"\\n          name=\\\"\\\"\\n          id=\\\"\\\"\\n          cols=\\\"5\\\"\\n          rows=\\\"5\\\"\\n        ></textarea>\\n      </mat-form-field>\\n      <button class=\\\" btn btn-primary mat-raised-button\\\">\\n        envoyer le mail\\n      </button>\\n    </form>\\n    <form *ngIf=\\\"sms\\\">\\n      <mat-form-field class=\\\"form-group\\\">\\n        <textarea\\n          matInput\\n          placeholder=\\\"Ecrivez votre sms\\\"\\n          type=\\\"text\\\"\\n          name=\\\"\\\"\\n          id=\\\"\\\"\\n          cols=\\\"5\\\"\\n          rows=\\\"5\\\"\\n        ></textarea>\\n      </mat-form-field>\\n      <button class=\\\"btn btn-success mat-raised-button\\\">envoyer le sms</button>\\n    </form>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"col-sm-12 col-md-12\\\">\\n  <mat-toolbar class=\\\" card-header bg-dark text-light\\\">\\n    Notifications  </mat-toolbar>  \\n  <mat-paginator\\n      [length]=\\\"length\\\"\\n      [pageSize]=\\\"pageSize\\\"\\n      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n      showFirstLastButtons\\n    >\\n    </mat-paginator>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n      <mat-table [dataSource]=\\\"datasource\\\" matSort>\\n        <!-- ID Column -->\\n        <ng-container matColumnDef=\\\"title\\\">\\n          <mat-header-cell class=\\\" bg-danger text-light\\\" *matHeaderCellDef mat-sort-header >\\n            Titre\\n          </mat-header-cell>\\n          <mat-cell class=\\\" bg-warning\\\" *matCellDef=\\\"let row\\\"> {{ row?.title }} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Progress Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n          <mat-header-cell class=\\\" bg-danger text-light\\\" *matHeaderCellDef mat-sort-header>\\n            Nom de l'abonné\\n          </mat-header-cell>\\n          <mat-cell class=\\\" bg-warning\\\" *matCellDef=\\\"let row\\\"> {{ row?.userName }} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"returnDate\\\">\\n          <mat-header-cell class=\\\" bg-danger text-light\\\" *matHeaderCellDef mat-sort-header>\\n            Date de retour\\n          </mat-header-cell>\\n          <mat-cell class=\\\" bg-warning\\\" *matCellDef=\\\"let row\\\"> {{ row?.returnDate }} </mat-cell>\\n        </ng-container>\\n        <!-- action Column -->\\n        <ng-container matColumnDef=\\\"Action\\\">\\n          <mat-header-cell class=\\\" bg-danger text-light\\\" *matHeaderCellDef mat-sort-header>\\n            Consulter l'abonné\\n          </mat-header-cell>\\n          <mat-cell class=\\\" bg-warning\\\" *matCellDef=\\\"let row\\\">\\n            <button\\n              [routerLink]=\\\"['/client', row?.idUser]\\\"\\n              class=\\\"btn btn-outline-danger\\\"\\n            >\\n              Consulter\\n            </button>\\n          </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row\\n          *matHeaderRowDef=\\\"displayedColumns\\\"\\n        ></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\">\\n        </mat-row>\\n      </mat-table>\\n    </div>\\n  </div>\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4 col-sm-12\\\">\\n    <h2 class=\\\"card-header\\\" >Tous les livres</h2>\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\" style=\\\"width: 100%;\\\">\\n      <ng-container matColumnDef=\\\"Type\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Type de livre </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Type}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"totalNumber\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre total </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.totalNumber}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"absentNumber\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Livres absents </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.absentNumber}} </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n  </div>\\n  <div class=\\\"col-md-8 col-sm-12\\\"></div>\\n\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-5\\\">\\n    <mat-card class=\\\" bg-secondary\\\">\\n      <h4 class=\\\" card-header\\\" >Choisir une periode</h4>\\n      <mat-card-content>\\n        <mat-select (selectionChange)=\\\"onChange($event.value)\\\" >\\n          <mat-option value=\\\"Aout\\\">Aout</mat-option>\\n          <mat-option value=\\\"Juillet\\\">Juillet</mat-option>\\n        </mat-select>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <div class=\\\"col-sm-12 col-md-7\\\" *ngIf=\\\"month!= null\\\">\\n    <div>\\n      <div style=\\\"display: block\\\">\\n        <canvas baseChart\\n                [datasets]=\\\"barChartData\\\"\\n                [labels]=\\\"barChartLabels\\\"\\n                [options]=\\\"barChartOptions\\\"\\n                [legend]=\\\"barChartLegend\\\"\\n                [chartType]=\\\"barChartType\\\">\\n        </canvas>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","export default \"<div class=\\\"col-md-8\\\">\\n  <div class=\\\"card\\\">\\n    <h4 class=\\\"card-header text-light bg-dark\\\">Ajouter un abonné</h4>\\n    <div class=\\\"card-body\\\">\\n      <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"form-group\\\">\\n                <input\\n                  matInput\\n                  formControlName=\\\"firstName\\\"\\n                  placeholder=\\\"First Name\\\"\\n                  type=\\\"text\\\"\\n                />\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"form-group\\\">\\n                <input\\n                  matInput\\n                  formControlName=\\\"lastName\\\"\\n                  placeholder=\\\"Name\\\"\\n                  type=\\\"text\\\"\\n                />\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <mat-form-field class=\\\"form-group\\\">\\n                <input\\n                  matInput\\n                  formControlName=\\\"email\\\"\\n                  placeholder=\\\"Addresse email\\\"\\n                  type=\\\"email\\\"\\n                />\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n        <button\\n          mat-raised-button\\n          type=\\\"submit\\\"\\n          class=\\\"btn btn-danger pull-right\\\"\\n          [disabled]=\\\"userForm.invalid\\\"\\n\\n        >\\n          Ajouter l'abonné\\n        </button>\\n        <div class=\\\"clearfix\\\"></div>\\n      </form>\\n      <p class=\\\"text-danger\\\">{{ errorMessage }}</p>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<h4 mat-dialog-title>Notification</h4>\\n<div mat-dialog-content>\\n  <p>Etes vous sûr d'enregistrer {{data.name}} ?</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onNoClick()\\\">Annuler</button>\\n  <button mat-button mat-dialog-close=\\\"ok\\\" cdkFocusInitial>Enregistrer</button>\\n</div>\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12 col-lg-4\\\">\\n    <div class=\\\"card card-profile\\\">\\n      <div class=\\\"card-body\\\">\\n        <mat-nav-list>\\n          <mat-list-item>\\n          </mat-list-item>\\n          <mat-list-item class=\\\"card-header text-center\\\">\\n            <h4 >{{ User?.firstName }} {{ User?.lastName }}</h4>\\n          </mat-list-item>\\n          <mat-list-item> Email: {{ User?.email }}  </mat-list-item>\\n        </mat-nav-list>\\n\\n        <!-- <a\\n          class=\\\"btn btn-danger btn-round\\\"\\n          (click)=\\\"message = true\\\"\\n          >Envoyer une notification</a\\n        > -->\\n      </div>\\n    </div>\\n    <app-single-message *ngIf=\\\"message\\\" ></app-single-message>\\n  </div>\\n  <div class=\\\"col-lg-8 col-md-12\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <mat-toolbar>\\n          Livres lus\\n        </mat-toolbar>\\n      </div>\\n      <div class=\\\"col-sm-12\\\">\\n        <table class=\\\"table table-striped\\\">\\n          <thead>\\n            <tr class=\\\" small\\\">\\n              <th scope=\\\"col\\\">#</th>\\n              <th scope=\\\"col\\\">Titre</th>\\n              <th scope=\\\"col\\\">Genre</th>\\n              <th scope=\\\"col\\\">Auteur</th>\\n              <th scope=\\\"col\\\">Date d'empeint</th>\\n              <th scope=\\\"col\\\">Date de retour</th>\\n              <th scope=\\\"col\\\">Rendu</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let book of myBooks; let i = index\\\" class=\\\"small\\\">\\n              <td>{{ i + 1 }}</td>\\n              <td>{{ book?.book?.title }}</td>\\n              <td>{{ book?.genre?.name }}</td>\\n              <td>{{ book?.book?.author }}</td>\\n              <td>{{ book?.borrowDate }}</td>\\n              <td>{{ book?.returnDate }}</td>\\n              <td *ngIf=\\\"book?.returned === 1\\\" class=\\\" bg-success text-light\\\">Oui</td>\\n              <td *ngIf=\\\"book?.returned === 0\\\" class=\\\" bg-danger text-light\\\">Non</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n\\n    <!-- Angular 8 pagination -->\\n  </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8\\\">\\n    <div class=\\\"card\\\">\\n      <h4 class=\\\"card-header bg-dark text-light\\\">Abonnés</h4>\\n      <div class=\\\"card-body menuB\\\">\\n        <button mat-raised-button class=\\\"btn btn-success btn-sm \\\" routerLink=\\\"/addUser\\\">\\n          Ajouter un abonné\\n        </button>\\n      </div>\\n      <form class=\\\"form-check-inline card-body\\\" [formGroup]=\\\"searchForm\\\">\\n        <input\\n          class=\\\"form-control\\\"\\n          formControlName=\\\"letter\\\"\\n          type=\\\"text\\\"\\n          placeholder=\\\"Rechercher un abonné\\\"\\n          aria-label=\\\"Rechercher\\\"\\n        />\\n        <button\\n          class=\\\"btn btn-outline-success\\\"\\n          type=\\\"submit\\\"\\n          [disabled]=\\\"searchForm.invalid\\\"\\n          (click)=\\\"search()\\\"\\n        >\\n          Rechercher\\n        </button>\\n        <button\\n          class=\\\"btn btn-outline-danger\\\"\\n          [disabled]=\\\"searchForm.invalid\\\"\\n          (click)=\\\"this.initForm()\\\"\\n        >\\n          Effacer\\n        </button>\\n      </form>\\n      <div *ngIf=\\\"searchResults\\\">\\n        <table class=\\\"table table-striped\\\">\\n          <thead>\\n            <tr>\\n              <th scope=\\\"col\\\">#</th>\\n              <th scope=\\\"col\\\">Prenom</th>\\n              <th scope=\\\"col\\\">Nom</th>\\n              <th scope=\\\"col\\\">Action</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let user of Users; let i = index\\\">\\n              <td>{{ i + 1 }}</td>\\n              <td>{{ user.firstName }}</td>\\n              <td>{{ user.lastName }}</td>\\n              <td>\\n                <button\\n                  (click)=\\\"details(user.idUser)\\\"\\n                  class=\\\"btn btn-group btn-outline-primary\\\"\\n                >\\n                  Consulter\\n                </button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <div>\\n        <button class=\\\"btn btn-group btn-danger\\\" *ngIf=\\\"errorMessage\\\">\\n          Cet utilisateur n'existe pas\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <div class=\\\"col-sm-12 col-md-4\\\">\\n    <div class=\\\"card\\\">\\n      <h4 class=\\\"card-header bg-dark text-light\\\">Messages</h4>\\n      <div class=\\\"card-body menuB\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12\\\"   >\\n                      <div class=\\\"d-flex sm\\\">\\n                        <button class=\\\"btn btn-outline-success\\\" (click)=\\\"showSms()\\\" >Message groupé</button>\\n                        <button class=\\\"btn btn-outline-primary\\\" (click)=\\\"showMail()\\\">Mail groupé</button>\\n                      </div>\\n          </div>\\n                <div class=\\\"col-md-6 col-sm-12\\\">\\n                  <form *ngIf=\\\"mail\\\">\\n                    <mat-form-field class=\\\"form-group\\\">\\n                      <textarea matInput placeholder=\\\"Ecrivez votre mail\\\" type=\\\"text\\\" name=\\\"\\\" id=\\\"\\\" cols=\\\"5\\\" rows=\\\"5\\\"></textarea>\\n                    </mat-form-field>\\n                    <button class=\\\" btn btn-primary mat-raised-button\\\">envoyer le mail</button>\\n                  </form>\\n                  <form *ngIf=\\\"sms\\\">\\n                    <mat-form-field class=\\\"form-group\\\">\\n                      <textarea matInput placeholder=\\\"Ecrivez votre sms\\\" type=\\\"text\\\" name=\\\"\\\" id=\\\"\\\" cols=\\\"5\\\" rows=\\\"5\\\"></textarea>\\n                    </mat-form-field>\\n                    <button class=\\\"btn btn-success mat-raised-button\\\">envoyer le sms</button>\\n\\n                  </form>\\n                </div>\\n\\n              </div>\\n\\n      </div>\\n    </div>\\n  </div> -->\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-10\\\">\\n    <div class=\\\"card\\\">\\n      <mat-paginator\\n        [length]=\\\"length\\\"\\n        [pageSize]=\\\"pageSize\\\"\\n        [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n        showFirstLastButtons\\n      >\\n      </mat-paginator>\\n      <div class=\\\"example-container mat-elevation-z8 card-body\\\">\\n        <mat-table [dataSource]=\\\"datasource\\\" matSort>\\n          <!-- ID Column -->\\n          <ng-container matColumnDef=\\\"firstName\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Prenom\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.firstName }} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Progress Column -->\\n          <ng-container matColumnDef=\\\"lastName\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Nom\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.lastName }} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"email\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Email\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{ row.email }} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"Action\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Action\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">\\n              <button\\n                (click)=\\\"details(row.id)\\\"\\n                class=\\\"btn btn-group btn-outline-primary\\\"\\n              >\\n                Consulter\\n              </button>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"> </mat-row>\\n        </mat-table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport {\n  MatSortModule,\n  MatPaginatorModule,\n  MatDialogModule,\n  MatNativeDateModule\n} from '@angular/material';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport {MatBadgeModule} from '@angular/material/badge';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  exports: [\n    MatBadgeModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatTabsModule,\n    MatNativeDateModule,\n    BrowserAnimationsModule,\n    MatMenuModule,\n    MatSortModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatPaginatorModule,\n    MatToolbarModule,\n    MatListModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatDividerModule,\n    MatInputModule,\n    MatStepperModule,\n    MatCardModule,\n    MatTableModule,\n    MatSelectModule,\n    MatInputModule\n  ]\n})\nexport class AngularMaterialModule {}\n","import { AuthGuardService } from './services/guards/auth-guard.service';\nimport { LoginComponent } from './login/login.component';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { MessagesComponent } from './messages/messages/messages.component';\nimport { SingleMessageComponent } from './messages/single-message/single-message.component';\nimport { BorrowBookComponent } from './book-dashboard/borrow-book/borrow-book.component';\nimport { GlobalStatsComponent } from './statistic/global-stats/global-stats.component';\nimport { ClientsComponent } from './users/clients/clients.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AddUserComponent, Dialog } from './users/add-user/add-user.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClientComponent } from './users/client/client.component';\nimport { BorrowedBookComponent } from './book-dashboard/borrowed-book/borrowed-book.component';\nimport { BookDashboardComponent } from './book-dashboard/book-dashboard.component';\nimport { BookComponent } from './book-dashboard/book/book.component';\nimport { AddBookComponent } from './book-dashboard/add-book/add-book.component';\nimport { LivresComponent } from './book-dashboard/livres/livres.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AuthGuardDeconnectedService } from './services/guards/auth-guard-deconnected.service';\n\nexport const routes: Routes = [\n  {\n    path: '', redirectTo: '/dashboard', pathMatch: 'full'\n  },\n   {\n    path: '*', redirectTo: '/dashboard', pathMatch: 'full'\n  },\n\n  {\n    path: 'dashboard', component: DashboardComponent, pathMatch: 'full'\n  },\n  {\n    path: 'addUser', component: AddUserComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'clients', component: ClientsComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'client/:id', component: ClientComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'singleMessage', component: SingleMessageComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'messages', component: MessagesComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  }\n  ,\n  {\n    path: 'GS', component: GlobalStatsComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'type/:id', component: LivresComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'addBook', component: AddBookComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'book/:id', component: BookComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'bookDashboard', component: BookDashboardComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'borrowedBook', component: BorrowedBookComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'borrowBook/:id', component: BorrowBookComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'notification', component: NotificationsComponent, pathMatch: 'full', canActivate: [AuthGuardService]\n  },\n  {\n    path: 'login', component: LoginComponent, pathMatch: 'full', canActivate: [AuthGuardDeconnectedService]\n  },\n\n];\n\nexport const components = [\n  AddUserComponent, DashboardComponent, ClientsComponent, ClientComponent,\n  NotificationsComponent , GlobalStatsComponent, Dialog,   BorrowedBookComponent,\n  BookDashboardComponent, SingleMessageComponent,\n  BookComponent, HeaderComponent, BorrowBookComponent, MessagesComponent,\n  AddBookComponent, LoginComponent,\n  LivresComponent\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \".navigation {\\n  width: 100%;\\n  text-align: right;\\n}\\n\\n.container {\\n  background: white;\\n}\\n\\n.brand {\\n  height: 100px;\\n  width: auto;\\n}\\n\\n.navbar {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.logo {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.content {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.filler {\\n  flex: 1 1 auto;\\n}\\n\\n.top {\\n  width: auto;\\n  height: 10px;\\n  background: #3499d2;\\n  background: linear-gradient(90deg, #3499d2 19%, #d0f4cb 95%);\\n  background-size: cover;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRDpcXHByb2pldFxcYW5ndWxhciBwcm9qZWN0XFxuYXRpb25hbExpYnJhcnkvc3JjXFxhcHBcXGFwcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLGlCQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxpQkFBQTtBQ0VGOztBREFBO0VBQ0UsYUFBQTtFQUNBLFdBQUE7QUNHRjs7QUREQTtFQUNFLGFBQUE7RUFDQSw4QkFBQTtBQ0lGOztBREZBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQ0tGOztBREhBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUNNRjs7QURKQTtFQUNFLGNBQUE7QUNPRjs7QURKQTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0EsbUJBQUE7RUFDQSw0REFBQTtFQUFzRixzQkFBQTtBQ1F4RiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZpZ2F0aW9ue1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG4uY29udGFpbmVye1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbn1cbi5icmFuZHtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgd2lkdGg6IGF1dG87XG59XG4ubmF2YmFye1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG4ubG9nb3tcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uY29udGVudCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4uZmlsbGVye1xuICBmbGV4OiAxIDEgYXV0bztcbn1cblxuLnRvcHtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMTBweDtcbiAgYmFja2dyb3VuZDogcmdiKDUyLDE1MywyMTApO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoNTIsMTUzLDIxMCwxKSAxOSUsIHJnYmEoMjA4LDI0NCwyMDMsMSkgOTUlKTsgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59IiwiLm5hdmlnYXRpb24ge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5jb250YWluZXIge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbn1cblxuLmJyYW5kIHtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgd2lkdGg6IGF1dG87XG59XG5cbi5uYXZiYXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5sb2dvIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5jb250ZW50IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmZpbGxlciB7XG4gIGZsZXg6IDEgMSBhdXRvO1xufVxuXG4udG9wIHtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMTBweDtcbiAgYmFja2dyb3VuZDogIzM0OTlkMjtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjMzQ5OWQyIDE5JSwgI2QwZjRjYiA5NSUpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufSJdfQ== */\";","import { AuthService } from './services/auth.service';\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent{\n  title = 'gym';\n  constructor(private router: Router,\n    private auth: AuthService) {\n    //\n    auth.Authenticated();\n  }\n}\n","import { AuthGuardService } from './services/guards/auth-guard.service';\nimport { AuthService } from './services/auth.service';\nimport { NotificationsService } from './services/notifications.service';\nimport { Dialog } from './users/add-user/add-user.component';\nimport { BooksService } from './services/books.service';\nimport { ClientsService } from './services/clients.service';\nimport { RouterModule } from '@angular/router';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { AppRoutingModule, components, routes } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { GestionModule } from './gestion/gestion.module';\nimport { AuthGuardDeconnectedService } from './services/guards/auth-guard-deconnected.service';\n\n@NgModule({\n  entryComponents: [Dialog],\n  declarations: [AppComponent, components],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    AngularMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes),\n    GestionModule,\n    HttpClientModule\n  ],\n  providers: [ClientsService, BooksService, NotificationsService, AuthService,\n    AuthGuardDeconnectedService, AuthGuardService,\n    {\n      provide : HTTP_INTERCEPTORS,\n      useClass: AuthGuardService,\n      multi   : true,\n    },  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2stZGFzaGJvYXJkL2FkZC1ib29rL2FkZC1ib29rLmNvbXBvbmVudC5zY3NzIn0= */\";","import { AuthService } from './../../services/auth.service';\nimport { BooksService } from './../../services/books.service';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material/dialog';\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styleUrls: ['./add-book.component.scss']\n})\nexport class AddBookComponent implements OnInit {\n  bookForm: FormGroup;\n  book;\n  $event; // uploaded image\n  picTab: Array<any> = []; // display\n  picSend: (File | Blob)[] = []; // send to firebase\n  message; // for the pic\n  genres;\n  idGenre;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    public dialog: MatDialog,\n    private bookS: BooksService,\n    private auth: AuthService\n  ) {\n    bookS.getGenres().subscribe(\n      (data) => {this.genres = data}\n      , (error) => {\n        this.auth.checkAuthError(error);\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.initForm();\n    //  this.compS.getCompany(localStorage.getItem('id')).subscribe(\n    //  (data) => this.user = data\n    // );\n  }\n  initForm() {\n    this.bookForm = this.formBuilder.group({\n      title: ['', [Validators.required]],\n      author: ['', [Validators.required]],\n      year: ['', [Validators.required]],\n      genre: [Validators.required]\n    });\n  }\n  onSubmit() {\n    this.book = {\n      title: this.bookForm.get('title').value,\n      author: this.bookForm.get('author').value,\n      year: this.bookForm.get('year').value,\n      enabled: 1,\n      image: '',\n      disponible: 1\n    };\n    this.idGenre = this.bookForm.get('genre').value;\n\n    this.openDialog();\n  }\n  // upload(event) {\n  //   this.picSend = event.target.files[0];\n  //   const reader = new FileReader();\n  //   const mimeType = event.target.files[0].type;\n  //   if (mimeType.match(/image\\/*/) == null) {\n  //     this.message = 'Only images are supported.';\n  //     return;\n  //   }\n  //   console.log(this.picSend);\n\n  //   reader.readAsDataURL(event.target.files[0]);\n  //   reader.onload = () => {\n  //     this.picTab.push({ image: reader.result });\n  //   };\n  // }\n  openDialog(): void {\n    const dialogRef = this.dialog.open(Dialog, {\n      width: '250px',\n      data: this.book\n    });\n\n    dialogRef.afterClosed().subscribe((data: any) => {\n      if (data) {\n        this.bookS.addBook(this.book, this.idGenre).subscribe(() =>{\n          this.router.navigate(['/bookDashboard']);\n        });\n      }\n    });\n  }\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html'\n})\n// tslint:disable-next-line:component-class-suffix\nexport class Dialog {\n  constructor(\n    public dialogRef: MatDialogRef<Dialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n  save() {\n    this.dialogRef.close(true);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2stZGFzaGJvYXJkL2Jvb2stZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIn0= */\";","import { AuthService } from './../services/auth.service';\nimport { BooksService } from './../services/books.service';\nimport { Component, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-book-dashboard',\n  templateUrl: './book-dashboard.component.html',\n  styleUrls: ['./book-dashboard.component.scss']\n})\nexport class BookDashboardComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  searchForm: FormGroup;\n  searchResults = false;\n  displayedColumns = ['title', 'author', 'genre', 'Action'];\n  Books = [];\n  genres;\n  datasource;\n  length;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10];\n  allBooks = true;\n  specificBooks = false;\n  bookGenreId: number;\n  errorMessage: boolean;\n  constructor(\n    private bookS: BooksService,\n    private route: Router,\n    private formBuilder: FormBuilder,\n    private auth: AuthService\n  ) {\n    this.bookS.getBooks().subscribe((data: any) => {\n      this.datasource = new MatTableDataSource(data);\n      this.length = data.length;\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n    this.bookS.getGenres().subscribe((data: any) => {\n      this.genres = data;\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngAfterViewInit() {\n    //\n  }\n  search() {\n    this.Books = [];\n    this.searchResults = false;\n    const letter = this.searchForm\n      .get('letter')\n      .value.toLowerCase()\n      .trim();\n    if (letter === '') {\n      this.errorMessage = true;\n    } else {\n      this.bookS.getBooks().subscribe((data: any) => {\n        data.forEach(async book => {\n          if (book.title.toLowerCase().includes(letter.toLowerCase())) {\n            await this.Books.push(book);\n            this.searchResults = true;\n            this.errorMessage = false;\n\n          }\n        });\n      });\n      if (this.Books.length === 0) {\n        this.errorMessage = true;\n      }\n    }\n  }\n  initForm() {\n    this.searchForm = this.formBuilder.group({\n      letter: ['', [Validators.required]]\n    });\n    this.Books = [];\n    this.searchResults = false;\n    this.errorMessage = false;\n  }\n  details(idBook) {\n    this.route.navigate(['/book/', idBook]);\n  }\n  displayAll() {\n    this.allBooks = true;\n    this.specificBooks = false;\n  }\n  display(id) {\n    this.allBooks = false;\n    this.specificBooks = true;\n    this.bookGenreId = id;\n  }\n\n  delete(id) {\n    this.bookS.delete(id).subscribe(() => {\n\n    }, (error) => {\n      this.auth.checkAuthError(error);\n      if (error.status === 500) {\n        alert('This book was already borrowed, it\\'s saved in the borrowed book db, you can\\'t delete it');\n      }\n    });\n  }\n\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngOnChanges(changes: SimpleChanges): void {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    this.bookS.getBooks().subscribe((data: any) => {\n      this.datasource = new MatTableDataSource(data);\n      this.length = data.length;\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n  }\n}\n","export default \".imgWrapper {\\n  max-height: 400px;\\n  max-width: 200px;\\n}\\n\\n.imgCarousel {\\n  height: 100%;\\n  width: 100%;\\n  margin: auto;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9vay1kYXNoYm9hcmQvYm9vay9EOlxccHJvamV0XFxhbmd1bGFyIHByb2plY3RcXG5hdGlvbmFsTGlicmFyeS9zcmNcXGFwcFxcYm9vay1kYXNoYm9hcmRcXGJvb2tcXGJvb2suY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Jvb2stZGFzaGJvYXJkL2Jvb2svYm9vay5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0VBQ0EsZ0JBQUE7QUNDSjs7QURFRTtFQUNFLFlBQUE7RUFDQSxXQUFBO0VBQ0osWUFBQTtFQUNBLGNBQUE7QUNDQSIsImZpbGUiOiJzcmMvYXBwL2Jvb2stZGFzaGJvYXJkL2Jvb2svYm9vay5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbWdXcmFwcGVye1xyXG4gICAgbWF4LWhlaWdodDogNDAwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDIwMHB4O1xyXG5cclxuICB9XHJcbiAgLmltZ0Nhcm91c2Vse1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbm1hcmdpbjogYXV0bztcclxuZGlzcGxheTogYmxvY2s7ICB9IiwiLmltZ1dyYXBwZXIge1xuICBtYXgtaGVpZ2h0OiA0MDBweDtcbiAgbWF4LXdpZHRoOiAyMDBweDtcbn1cblxuLmltZ0Nhcm91c2VsIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn0iXX0= */\";","import { AuthService } from './../../services/auth.service';\nimport { BooksService } from './../../services/books.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.scss']\n})\nexport class BookComponent implements OnInit {\n  id;\n  Books = [];\n  book;\n  borrow = false;\n  prets;\n  constructor(\n    private aR: ActivatedRoute,\n    private auth: AuthService,\n    private bookS: BooksService\n  ) {\n    this.aR.params.subscribe(params => {\n      this.id = params.id;\n      bookS.getBook(this.id).subscribe((data: any) => {\n        this.book = data;\n        this.bookS\n          .getPretBook(this.book.id)\n          .subscribe(results => (this.prets = results));\n      }, (error) => {\n        this.auth.checkAuthError(error);\n      });\n\n      bookS.getPretBook(this.id).subscribe((data)=>{\n        this.prets = data;\n        console.log(data);\n\n      }, (error) => {\n        this.auth.checkAuthError(error);\n      })\n    });\n  }\n  borrowBook() {\n    this.borrow = true;\n  }\n  ngOnInit() {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2stZGFzaGJvYXJkL2JvcnJvdy1ib29rL2JvcnJvdy1ib29rLmNvbXBvbmVudC5zY3NzIn0= */\";","import { AuthService } from './../../services/auth.service';\nimport { BooksService } from 'src/app/services/books.service';\nimport { async } from '@angular/core/testing';\nimport { ClientsService } from './../../services/clients.service';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-borrow-book',\n  templateUrl: './borrow-book.component.html',\n  styleUrls: ['./borrow-book.component.scss']\n})\nexport class BorrowBookComponent implements OnInit {\n  @Input() book;\n  @Output() borrowed = new EventEmitter<boolean>();\n  isLinear = true;\n  searchForm: FormGroup;\n  borrowForm: FormGroup;\n  Users;\n  searchResults = false;\n  selected = false;\n  errorMessage = false;\n  choosenUser;\n  minDate;\n  maxDate;\n  errorDate = false;\n  myFilter = (d: Date | null): boolean => {\n    const day = (d || new Date()).getDay();\n    // Prevent Saturday and friday from being selected.\n    return day !== 0 && day !== 5;\n  }\n  constructor(\n    private formBuilder: FormBuilder,\n    private userS: ClientsService,\n    private bookS: BooksService,\n    private auth: AuthService\n  ) {\n    const currentYear = new Date().getFullYear();\n    const currentMonth = new Date().getMonth();\n    const currentDay = new Date().getDate();\n    this.minDate = new Date(currentYear - 0, currentMonth, currentDay);\n    this.maxDate = new Date(currentYear + 0, currentMonth, currentDay + 15);\n  }\n\n  ngOnInit() {\n    this.initsearchForm();\n    this.borrowForm = this.formBuilder.group({\n      returnDate: ['', Validators.required],\n    });\n  }\n  onSubmit() {\n    const event = new Date(this.borrowForm.get('returnDate').value);\n\n    const options: any = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    const date = event.toLocaleDateString('fr-FR', options);\n    const Pret = {\n      userId: localStorage.getItem('id'),\n      bookId: this.book.id,\n      clientId: this.choosenUser.id,\n      borrowDate: new Date().toLocaleDateString('fr-FR', options),\n      returnDate: date,\n      returned: 0,\n    };\n    this.bookS.borrowBook(Pret).subscribe(() => {\n      this.borrowed.emit();\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n  }\n  search() {\n    this.Users = [];\n    this.searchResults = false;\n    this.selected = false;\n    const letter = this.searchForm\n      .get('letter')\n      .value.toLowerCase().trim()\n      ;\n    if (letter === '') {\n      this.errorMessage = true;\n    } else {\n      this.userS.getClients().subscribe((data: any) => {\n        data.forEach(async user => {\n          if (user.firstName.toLowerCase().includes(letter) || user.lastName.toLowerCase().includes(letter)) {\n            await this.Users.push(user);\n            this.searchResults = true;\n          }\n        });\n        if (this.Users.length === 0) {\n          this.errorMessage = true;\n        }\n      }, (error) => {\n        this.auth.checkAuthError(error);\n      });\n    }\n  }\n  initsearchForm() {\n    this.searchForm = this.formBuilder.group({\n      letter: ['', [Validators.required]]\n    });\n    this.Users = [];\n    this.selected = false;\n    this.searchResults = false;\n    this.errorMessage = false;\n  }\n  choose(choosenUser) {\n    this.choosenUser = choosenUser;\n    this.selected = true;\n    this.searchResults = false;\n  }\n\n  resetUser() {\n    this.choosenUser = null;\n    this.selected = false;\n    this.searchResults = false;\n    this.initsearchForm();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2stZGFzaGJvYXJkL2JvcnJvd2VkLWJvb2svYm9ycm93ZWQtYm9vay5jb21wb25lbnQuc2NzcyJ9 */\";","import { AuthService } from './../../services/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { BooksService } from 'src/app/services/books.service';\nimport { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-borrowed-book',\n  templateUrl: './borrowed-book.component.html',\n  styleUrls: ['./borrowed-book.component.scss']\n})\nexport class BorrowedBookComponent implements OnInit {\n  Prets;\n  searchResults;\n  searchPrets;\n  searchForm: FormGroup;\n  errorMessage = false;\n  constructor(private bookS: BooksService, private formbuilder: FormBuilder,\n              private router: Router, private auth: AuthService) {\n\n    this.getAllPrets();\n  }\n  ngOnInit() {\n    this.initsearchForm();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    // Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    // Add '${implements OnChanges}' to the class.\n    this.getAllPrets();\n  }\n  rendu(pret) {\n    const options: any = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    pret.returnDate = new Date().toLocaleDateString('fr-FR', options),\n      pret.returned = 1;\n    this.bookS.rendu(pret).subscribe(() => {\n      this.initsearchForm();\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n\n  }\n  notifier() {\n    //\n  }\n  getAllPrets() {\n    this.bookS.getAllPrets().subscribe((data: any) => {\n      this.Prets = data;\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n  }\n  search() {\n    this.searchPrets = [];\n    this.searchResults = false;\n    const letter = this.searchForm\n      .get('letter')\n      .value.trim()\n      .toLowerCase();\n    if (letter === '') {\n      this.errorMessage = true;\n\n    } else {\n      this.Prets.forEach(async pret => {\n        if (pret.book.title.toLowerCase().includes(letter)) {\n          await this.searchPrets.push(pret);\n          this.searchResults = true;\n\n        }\n      });\n      if (this.searchPrets.length === 0) {\n        this.errorMessage = true;\n\n      }\n    }\n  }\n  initsearchForm() {\n    this.searchForm = this.formbuilder.group({\n      letter: ['', [Validators.required]]\n    });\n    this.searchPrets = [];\n    this.searchResults = false;\n    this.errorMessage = false;\n  }\n\n  check(id) {\n\n    this.router.navigate(['/book/' + id]);\n\n  }\n}\n","export default \"mat-card {\\n  background-color: transparent;\\n  text-align: center;\\n}\\n\\n.imgWrapper {\\n  max-height: 400px;\\n  max-width: 200px;\\n}\\n\\n.imgCarousel {\\n  height: 100%;\\n  width: 100%;\\n  margin: auto;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9vay1kYXNoYm9hcmQvbGl2cmVzL0Q6XFxwcm9qZXRcXGFuZ3VsYXIgcHJvamVjdFxcbmF0aW9uYWxMaWJyYXJ5L3NyY1xcYXBwXFxib29rLWRhc2hib2FyZFxcbGl2cmVzXFxsaXZyZXMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Jvb2stZGFzaGJvYXJkL2xpdnJlcy9saXZyZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw2QkFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FERUU7RUFDRSxpQkFBQTtFQUNBLGdCQUFBO0FDQ0o7O0FERUU7RUFDRSxZQUFBO0VBQ0EsV0FBQTtFQUNKLFlBQUE7RUFDQSxjQUFBO0FDQ0EiLCJmaWxlIjoic3JjL2FwcC9ib29rLWRhc2hib2FyZC9saXZyZXMvbGl2cmVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgfVxyXG4gIC5pbWdXcmFwcGVye1xyXG4gICAgbWF4LWhlaWdodDogNDAwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDIwMHB4O1xyXG5cclxuICB9XHJcbiAgLmltZ0Nhcm91c2Vse1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbm1hcmdpbjogYXV0bztcclxuZGlzcGxheTogYmxvY2s7ICB9IiwibWF0LWNhcmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uaW1nV3JhcHBlciB7XG4gIG1heC1oZWlnaHQ6IDQwMHB4O1xuICBtYXgtd2lkdGg6IDIwMHB4O1xufVxuXG4uaW1nQ2Fyb3VzZWwge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufSJdfQ== */\";","import { Component, OnInit, ViewChild, Input, SimpleChanges } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { BooksService } from 'src/app/services/books.service';\nimport { FormBuilder } from '@angular/forms';\n@Component({\n  selector: 'app-livres',\n  templateUrl: './livres.component.html',\n  styleUrls: ['./livres.component.scss']\n})\nexport class LivresComponent implements OnInit {\n  @Input() genreId: number;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  displayedColumns = ['title', 'author', 'year', 'Action'];\n  datasource;\n  length;\n  books;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10];\n  constructor(\n    private bookS: BooksService,\n    private route: Router,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.bookS.getBooksByGenre(this.genreId).subscribe((data:any) => {\n      this.books = data;\n      this.datasource = new MatTableDataSource(data);\n      this.length = data.length;\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n        });\n  }\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngAfterViewInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    this.bookS.getBooksByGenre(this.genreId).subscribe((data:any) => {\n      this.books = data;\n      this.datasource = new MatTableDataSource(data);\n      this.length = data.length;\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n        });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\";","import { BooksService } from 'src/app/services/books.service';\nimport { AuthService } from './../services/auth.service';\nimport { Router } from '@angular/router';\nimport { Component, ElementRef, AfterViewInit, Directive, HostListener } from '@angular/core';\nimport { ClientsService } from '../services/clients.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n  private map;\n  multi = [\n    {\n      name: 'Roman',\n      series: [\n        {\n          name: 'JAN',\n          value: 5\n        },\n        {\n          name: 'FEV',\n          value: 34\n        },\n        {\n          name: 'MARS',\n          value: 12\n        }\n      ]\n    },\n\n    {\n      name: 'Bande dessinée',\n      series: [\n        {\n          name: 'JAN',\n          value: 16\n        },\n        {\n          name: 'FEV',\n          value: 24\n        },\n        {\n          name: 'MARS',\n          value: 35\n        }\n      ]\n    },\n    {\n      name: 'Policier',\n      series: [\n        {\n          name: 'JAN',\n          value: 6\n        },\n        {\n          name: 'FEV',\n          value: 18\n        },\n        {\n          name: 'MARS',\n          value: 11\n        }\n      ]\n    },\n    {\n      name: 'Journal',\n      series: [\n        {\n          name: 'JAN',\n          value: 2\n        },\n        {\n          name: 'FEV',\n          value: 7\n        },\n        {\n          name: 'MARS',\n          value: 3\n        }\n      ]\n    }\n  ];\n  view: any[] = [700, 300];\n\n\n  // options\n  legend = true;\n  showLabels = true;\n  animations = true;\n  xAxis = true;\n  yAxis = true;\n  showYAxisLabel = true;\n  showXAxisLabel = true;\n  xAxisLabel = 'Mois';\n  yAxisLabel = 'Nombres';\n  timeline = true;\n\n  clientNumber = 0;\n  bookNumber = 0;\n  borrowBookNumber = 0;\n  userName;\n  isAuth;\n\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\n  };\n  constructor(private elementRef: ElementRef, private router: Router, private auth: AuthService,\n    private client: ClientsService, private book: BooksService) {\n    Object.assign(this, { this: this.multi });\n    this.userName = localStorage.getItem('username');\n    this.book.getBooks().subscribe(async (data: any) => {\n      this.bookNumber = data.length;\n      let borrowBook = await data.filter(book => {\n        return book.disponible === 0;\n      });\n      this.borrowBookNumber = borrowBook.length;\n    });\n    this.client.getClients().subscribe(async (data: any) => {\n      this.clientNumber = data.length;\n    });\n    this.auth.isAuth.subscribe(data => {\n      this.isAuth = data;\n    })\n  }\n\n  onSelect(data): void {\n    console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n  }\n\n  onActivate(data): void {\n    console.log('Activate', JSON.parse(JSON.stringify(data)));\n  }\n\n  onDeactivate(data): void {\n    console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dlc3Rpb24vZ2VucmUvZ2VucmUuY29tcG9uZW50LnNjc3MifQ== */\";","import { AuthService } from './../../services/auth.service';\nimport { BooksService } from './../../services/books.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-genre',\n  templateUrl: './genre.component.html',\n  styleUrls: ['./genre.component.scss']\n})\nexport class GenreComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  genreForm: FormGroup;\n  displayedColumns = ['name', 'description', 'Action'];\n  Genre;\n  datasource;\n  length;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10];\n  constructor(\n    private bookS: BooksService,\n    private auth: AuthService,\n    private formBuilder: FormBuilder\n  ) {\n  this.initForm();\n  }\n  initForm() {\n    this.genreForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      description: ['', [Validators.required]]\n    });\n    this.datasource = new MatTableDataSource(null);\n    this.bookS.getGenres().subscribe((data: any) => {\n      this.datasource = new MatTableDataSource(data);\n      this.length = data.length;\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n  }\n  async onSubmit() {\n    this.Genre = {\n      idGenre: '',\n      name: this.genreForm.get('name').value,\n      description: this.genreForm.get('description').value,\n      enabled: 1\n    };\n    await this.bookS.addGenre(this.Genre).subscribe(() => {\n      this.initForm();\n\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n  }\n  async delete(id) {\n    await this.bookS.deleteGenre(id).subscribe(() => {\n      this.initForm();\n    }, (error) => {\n      this.auth.checkAuthError(error);\n      if (error.status === 500) {\n        alert('You have to remove first the books from that type');\n      }\n    });\n\n  }\n  details(idGenre) {\n    //\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngAfterViewInit() {\n    //\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { routesG } from './gestion.routing.module';\nimport { GenreComponent } from './genre/genre.component';\n\n\n\n@NgModule({\n  declarations: [GenreComponent],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    AngularMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routesG),\n  ]\n})\nexport class GestionModule { }\n","import { DashboardComponent } from './../dashboard/dashboard.component';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GenreComponent } from './genre/genre.component';\r\n\r\nexport const routesG: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/dashboard',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    component: DashboardComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'genre',\r\n    component: GenreComponent,\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\nexport const components = [];\r\n@NgModule({\r\n  imports: [RouterModule],\r\n  exports: [RouterModule]\r\n})\r\nexport class GestionRoutingModule {}\r\n","export default \".navigation {\\n  width: 100%;\\n  text-align: right;\\n}\\n\\n.container {\\n  background: white;\\n}\\n\\n.brand {\\n  height: 100px;\\n  width: auto;\\n}\\n\\n.navbar-nav {\\n  display: flex;\\n}\\n\\n.logo {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.content {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.filler {\\n  flex-grow: 1;\\n}\\n\\n.top {\\n  width: auto;\\n  height: 10px;\\n  background: #3499d2;\\n  background: linear-gradient(90deg, #3499d2 19%, #d0f4cb 95%);\\n  background-size: cover;\\n}\\n\\nnav {\\n  margin-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL0Q6XFxwcm9qZXRcXGFuZ3VsYXIgcHJvamVjdFxcbmF0aW9uYWxMaWJyYXJ5L3NyY1xcYXBwXFxoZWFkZXJcXGhlYWRlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSxpQkFBQTtBQ0NKOztBRENFO0VBQ0UsaUJBQUE7QUNFSjs7QURBRTtFQUNFLGFBQUE7RUFDQSxXQUFBO0FDR0o7O0FEREU7RUFDRSxhQUFBO0FDSUo7O0FERkU7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FDS0o7O0FESEU7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQ01KOztBREpFO0VBQ0YsWUFBQTtBQ09BOztBRExFO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLDREQUFBO0VBQXNGLHNCQUFBO0FDUzFGOztBRFBFO0VBQ0UsbUJBQUE7QUNVSiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmF2aWdhdGlvbntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgfVxyXG4gIC5jb250YWluZXJ7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICB9XHJcbiAgLmJyYW5ke1xyXG4gICAgaGVpZ2h0OiAxMDBweDtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gIH1cclxuICAubmF2YmFyLW5hdntcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgfVxyXG4gIC5sb2dve1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgfVxyXG4gIC5jb250ZW50IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuICAuZmlsbGVye1xyXG5mbGV4LWdyb3c6IDE7ICB9XHJcbiAgXHJcbiAgLnRvcHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZDogcmdiKDUyLDE1MywyMTApO1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2JhKDUyLDE1MywyMTAsMSkgMTklLCByZ2JhKDIwOCwyNDQsMjAzLDEpIDk1JSk7ICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gIH1cclxuICBuYXZ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH0iLCIubmF2aWdhdGlvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLmNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xufVxuXG4uYnJhbmQge1xuICBoZWlnaHQ6IDEwMHB4O1xuICB3aWR0aDogYXV0bztcbn1cblxuLm5hdmJhci1uYXYge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4ubG9nbyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uY29udGVudCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5maWxsZXIge1xuICBmbGV4LWdyb3c6IDE7XG59XG5cbi50b3Age1xuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiAxMHB4O1xuICBiYWNrZ3JvdW5kOiAjMzQ5OWQyO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsICMzNDk5ZDIgMTklLCAjZDBmNGNiIDk1JSk7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbm5hdiB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59Il19 */\";","import { AuthService } from './../services/auth.service';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { NotificationsService } from '../services/notifications.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\nmatBadge = 0;\nisAuth = false;\n  constructor(\n    private notifS: NotificationsService,\n    private router: Router,\n    public auth: AuthService\n  ) {\n\n    auth.isAuth.subscribe((auth: any)=>{\n      this.isAuth = auth;\n    });\n   }\n\n  logout(): void {\n    this.auth.logout();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\";","import { Router } from '@angular/router';\r\nimport { ClientsService } from 'src/app/services/clients.service';\r\nimport { Component, OnInit, AfterViewInit, AfterContentChecked } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  error;\r\n  email: '';\r\n  password: '';\r\n  isLoading = false;\r\n  constructor(\r\n    private authS: AuthService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  submit(): void {\r\n    //\r\n    this.isLoading = true\r\n    this.authS.login(this.email, this.password);\r\n    this.authS.erroLogout().subscribe((data) => {\r\n      if (data === 500) {\r\n        this.error = \"Erreur de pseudo ou de mot de passe\";\r\n        this.isLoading = false\r\n      }    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2VzL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2VzL3NpbmdsZS1tZXNzYWdlL3NpbmdsZS1tZXNzYWdlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-single-message',\n  templateUrl: './single-message.component.html',\n  styleUrls: ['./single-message.component.scss']\n})\nexport class SingleMessageComponent implements OnInit {\n  mail = false;\n  sms = false;\n  constructor() {}\n\n  showSms() {\n    this.sms = true;\n    this.mail = false;\n  }\n  showMail() {\n    this.sms = false;\n    this.mail = true;\n  }\n  ngOnInit(): void {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9ucy5jb21wb25lbnQuc2NzcyJ9 */\";","import { NotificationsService } from './../services/notifications.service';\nimport { BooksService } from './../services/books.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  displayedColumns = ['title', 'name', 'returnDate', 'Action'];\n  datasource;\n  length;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10];\n  notifs;\n  constructor(\n    private bookS: BooksService,\n    private notifS: NotificationsService\n  ) {\n    notifS.getAllNotifs().subscribe((data:any) => {\n      this.datasource = new MatTableDataSource(data);\n      this.length = data.length;\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n    });\n  }\n\n  ngOnInit(): void {}\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  headers;\r\n  public isAuth: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  public error: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n  public staff: BehaviorSubject<any> = new BehaviorSubject<any>({});\r\n  public isSuperviseur = false;\r\n  public hasPower = false;\r\n  public isAgent = false;\r\n  public isVisiteur = false;\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n  setHeader() {\r\n    this.headers = new HttpHeaders().set('Content-Type', 'application/json')\r\n      .set('X-Requested-Width', 'XMLHttpRequest').set('Authorization', 'Bearer ' + localStorage.getItem('token'));\r\n  }\r\n  Authenticated() {\r\n    if (localStorage.getItem('id') && localStorage.getItem('token')) {\r\n      this.isAuth.next(true);\r\n    } else {\r\n      this.isAuth.next(false);\r\n    }\r\n    return this.isAuth.asObservable();\r\n\r\n  }\r\n\r\n  // SetStaffType(id) {\r\n  //   switch (id) {\r\n  //     case '5f2005ac07a53d4f38f95e08':\r\n  //       this.isSuperviseur = true;\r\n  //       break;\r\n  //     case '5f3b678b01539006e48af129':\r\n  //       this.isAgent = true;\r\n  //       break;\r\n  //     case '5f3b67fc01539006e48af12a':\r\n  //       this.hasPower = true;\r\n  //       break;\r\n  //     case '5f3b685201539006e48af12b':\r\n  //       this.isVisiteur = true;\r\n  //       break;\r\n  //   }\r\n  // }\r\n  canActivate(): boolean {\r\n    let state = false;\r\n\r\n    this.Authenticated().subscribe(data => {\r\n      state = data;\r\n    });\r\n    if (state) {\r\n      this.router.navigate(['/dashboard']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  getStaff() {\r\n    const staff = { username: localStorage.getItem('username'), id: localStorage.getItem('id') };\r\n    this.staff.next(staff);\r\n    return this.staff.asObservable();\r\n  }\r\n  login(username, password) {\r\n    const body = { username, password };\r\n    return this.http.post(environment.apiUrl + '/authenticate', body).subscribe(async (data: any) => {\r\n      await localStorage.setItem('token', data.jwt);\r\n\r\n      //then get the id of the user\r\n\r\n      return this.http.get(environment.apiUrl + '/user', this.headers).subscribe(async (data: any) => {\r\n        await localStorage.setItem('id', data.id);\r\n        await localStorage.setItem('username', data.username);\r\n\r\n        this.error.next('');\r\n        this.staff.next(data);\r\n        await this.Authenticated();\r\n        await this.router.navigate(['/dashboard']);\r\n\r\n\r\n      });\r\n\r\n    }, (error) => {\r\n      this.error.next(error.status);\r\n    });\r\n  }\r\n  erroLogout(): Observable<any> {\r\n    return this.error.asObservable();\r\n\r\n  }\r\n  logout() {\r\n    localStorage.clear();\r\n    this.Authenticated();\r\n    this.isAgent = false;\r\n    this.hasPower = false;\r\n    this.isVisiteur = false;\r\n    this.isSuperviseur = false;\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  checkAuthError(error) {\r\n    if (error.status === 403 || error.status === 401) {\r\n      this.logout();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooksService {\n  book: Observable<any>;\n  picId;\n  options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body' | 'events' | 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  };\n\n  constructor(\n    private http: HttpClient\n  ) {\n\n  }\n  getGenres() {\n    return this.http.get(environment.apiUrl +'/genres');\n\n  }\n  deleteGenre(id) {\n    return this.http.delete(environment.apiUrl +'/genres/' + id);\n\n  }\n  addGenre(genre) {\n    return this.http.post<any>(environment.apiUrl +'/genres', genre);\n\n  }\n  getBooksByGenre(id) {\n    return this.http.get(environment.apiUrl +'/books/genre/' + id);\n\n  }\n  getBooks() {\n    return this.http.get(environment.apiUrl +'/books');\n\n  }\n  getBook(idbook) {\n    // getOne Books\n    return this.http.get(environment.apiUrl +'/books/' + idbook);\n\n  }\n\n  delete(idbook) {\n    // getOne Books\n    return this.http.delete(environment.apiUrl + '/books/' + idbook);\n\n  }\n\n  upload(event, id) {\n    const path = `${id}`;\n\n  }\n  addBook(book, id) {\n\n    return this.http.post(environment.apiUrl +'/books/' + id , book);\n\n  }\n  borrowBook(pret) {\n    return this.http.post(environment.apiUrl + '/borrows/', pret);\n\n  }\n  getPretBook(idBook) {\n    return this.http.get(environment.apiUrl + '/borrows/book/' + idBook);\n\n  }\n  getAllPrets() {\n    //\n    return this.http.get(environment.apiUrl + '/borrows');\n  }\n\n  rendu(pret) {\n    return this.http.put(environment.apiUrl + '/borrows', pret);\n\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientsService {\n\n  user: Observable<any>;\n  options: {\n    headers?: HttpHeaders | { [header: string]: string | string[] },\n    observe?: 'body' | 'events' | 'response',\n    params?: HttpParams | { [param: string]: string | string[] },\n    reportProgress?: boolean,\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text',\n    withCredentials?: boolean,\n  };\n  picId;\n  constructor(\n    private http: HttpClient) {\n  }\n  getClients() {\n    return this.http.get(environment.apiUrl + '/clients');\n  }\n  getClient(idUser) {\n\n    return this.http.get(environment.apiUrl + '/clients/' + idUser);\n\n  }\n\n  // upload(event, id) {\n  //   return null;\n  // }\n  addClient(client) {\n\n    return this.http.post(environment.apiUrl + '/clients', client);\n  }\n  getAllmyBooks(idUser) {\n    return this.http.get(environment.apiUrl + '/borrows/client/' + 6);\n  }\n}\n","import { AuthService } from '../auth.service';\r\nimport { Router, CanActivate, CanDeactivate } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse, HttpInterceptor } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardDeconnectedService implements CanActivate, HttpInterceptor {\r\n\r\n  constructor(private authS: AuthService, private router: Router) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    console.log(environment.apiUrl + '/authenticate');\r\n\r\n    if (request.url !== (environment.apiUrl + '/authenticate')) {\r\n      console.log(request.url);\r\n\r\n      request = request.clone({\r\n        setHeaders: {\r\n          'Content-Type': 'application/json; charset=utf-8',\r\n          Accept: 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n    }\r\n\r\n\r\n    return next.handle(request);\r\n  }\r\n\r\n  canActivate(): any {\r\n    let state = true;\r\n    this.authS.isAuth.subscribe(auth => {\r\n      if (auth) {\r\n        state = false;\r\n      } else {\r\n        state = true;\r\n      }\r\n    });\r\n    return state;\r\n  }\r\n}\r\n","import { catchError } from 'rxjs/operators';\r\nimport { AuthService } from './../auth.service';\r\nimport { Router, CanActivate, CanDeactivate } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse, HttpInterceptor } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate, HttpInterceptor {\r\n  toasterService: any;\r\n\r\n  constructor(private authS: AuthService, private router: Router) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (request.url !== (environment.apiUrl + '/authenticate')) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n\r\n  canActivate(): boolean {\r\n    this.authS.isAuth.subscribe(auth => {\r\n      if (!auth) {\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      }\r\n    });\r\n    return true;\r\n  }\r\n\r\n  tap(arg0: (evt: any) => void): import('rxjs').OperatorFunction<HttpEvent<any>, unknown> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n  options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  constructor(\n\n  ) { }\n  getAllNotifs() {\n\n    // this.notifCollection = this.afs.collection('Prets'\n    // , ref =>\n    //   ref.where('returnDate', '<=', new Date().toLocaleDateString('fr-FR', this.options))\n    //   .where('rendu', '==', false)\n    //   );\n\n    // const notifs = this.notifCollection.valueChanges();\n    // return notifs;\n    return null;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YXRpc3RpYy9nbG9iYWwtc3RhdHMvZ2xvYmFsLXN0YXRzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-global-stats',\n  templateUrl: './global-stats.component.html',\n  styleUrls: ['./global-stats.component.scss']\n})\nexport class GlobalStatsComponent {\n  month;\n  year;\n  week;\n  barChartOptions = {\n    scaleShowVerticalLines: false,\n    responsive: true\n  };\n  barChartLabels = [this.month];\n  barChartType = 'bar';\n  barChartLegend = true;\n  barChartData = [\n    { data: [65], label: 'Roman' },\n    { data: [28], label: 'Conte' },\n    { data: [65], label: 'Biographie' },\n    { data: [28], label: 'Journal' },\n    { data: [65], label: 'Magasine' },\n    { data: [28], label: 'Bande dessinée' }\n  ];\n\n  displayedColumns: string[] = ['Type', 'totalNumber', 'absentNumber'];\n  ELEMENT_DATA = [\n    { Type: 'Roman', totalNumber: 1.0079, absentNumber: 'H' },\n    { Type: 'Journale', totalNumber: 4.0026, absentNumber: 'He' },\n    { Type: 'Conte', totalNumber: 6.941, absentNumber: 'Li' },\n    { Type: 'Bande dessinée', totalNumber: 9.0122, absentNumber: 'Be' },\n    { Type: 'Biographie', totalNumber: 10.811, absentNumber: 'B' },\n    { Type: 'Magasine', totalNumber: 12.0107, absentNumber: 'C' },\n\n  ];\n  dataSource = this.ELEMENT_DATA; // nescessaire\n\n  constructor() {\n    //\n  }\n\n  onChange(value) {\n    this.barChartLabels = [value];\n    this.month = value;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2FkZC11c2VyL2FkZC11c2VyLmNvbXBvbmVudC5zY3NzIn0= */\";","import { AuthService } from './../../services/auth.service';\nimport { ClientsService } from './../../services/clients.service';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material/dialog';\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n  userForm: FormGroup;\n  errorMessage: string;\n  user;\n  $event; // uploaded image\n  picTab: Array<any> = []; // display\n  picSend: (File | Blob)[] = []; // send to firebase\n  message; // for the pic\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    public dialog: MatDialog,\n    private userS: ClientsService,\n    private auth: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.userForm = this.formBuilder.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n    });\n  }\n  onSubmit() {\n    this.user = {\n      firstName: this.userForm.get('firstName').value,\n      lastName: this.userForm.get('lastName').value,\n      enabled: 1,\n      email: this.userForm.get('email').value,\n    };\n\n    this.openDialog();\n  }\n  // upload(event) {\n  //   this.picSend = event.target.files[0];\n  //   const reader = new FileReader();\n  //   const mimeType = event.target.files[0].type;\n  //   if (mimeType.match(/image\\/*/) == null) {\n  //     this.message = 'Only images are supported.';\n  //     return;\n  //   }\n  //   console.log(this.picSend);\n\n  //   reader.readAsDataURL(event.target.files[0]);\n  //   reader.onload = () => {\n  //     this.picTab.push({ image: reader.result });\n  //   };\n  // }\n  openDialog(): void {\n    const dialogRef = this.dialog.open(Dialog, {\n      width: '250px',\n      data: this.user\n    });\n\n    dialogRef.afterClosed().subscribe((data:any) => {\n      if (data === 'ok') {\n        this.userS.addClient(this.user).subscribe(() => {\n         this.router.navigate(['/clients']);\n        },(error) => {\n          this.auth.checkAuthError(error);\n        });\n      }\n    });\n  }\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html'\n})\n// tslint:disable-next-line:component-class-suffix\nexport class Dialog {\n  constructor(\n    public dialogRef: MatDialogRef<Dialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","export default \".img {\\n  width: 50%;\\n  height: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvY2xpZW50L0Q6XFxwcm9qZXRcXGFuZ3VsYXIgcHJvamVjdFxcbmF0aW9uYWxMaWJyYXJ5L3NyY1xcYXBwXFx1c2Vyc1xcY2xpZW50XFxjbGllbnQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3VzZXJzL2NsaWVudC9jbGllbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxVQUFBO0VBQ0EsWUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvdXNlcnMvY2xpZW50L2NsaWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbWd7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgXHJcbn1cclxuIiwiLmltZyB7XG4gIHdpZHRoOiA1MCU7XG4gIGhlaWdodDogYXV0bztcbn0iXX0= */\";","import { AuthService } from './../../services/auth.service';\nimport { BooksService } from 'src/app/services/books.service';\nimport { ClientsService } from './../../services/clients.service';\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nexport interface PeriodicElement {\n  name: string;\n  ID: number;\n  DD: number;\n  DR: string;\n}\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.scss']\n})\nexport class ClientComponent {\n  message = false;\n  id; // idUser\n  User; // user Data\n\n  myBooks;\n\n  constructor(\n    private aR: ActivatedRoute,\n    private auth: AuthService,\n    private userS: ClientsService,\n    private bookS: BooksService\n  ) {\n    this.aR.params.subscribe(params => {\n      this.id = params.id;\n      userS.getClient(this.id).subscribe((data: any) => {\n        this.User = data;\n      }, (error) => {\n        this.auth.checkAuthError(error);\n      });\n    });\n    this.myBooks = [];\n    userS.getAllmyBooks(this.id).subscribe((data: any) => {\n      this.myBooks = data;\n    }\n      , (error) => {\n        this.auth.checkAuthError(error);\n      });\n     this.chargeStatistic();\n  }\n  chargeStatistic() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2NsaWVudHMvY2xpZW50cy5jb21wb25lbnQuc2NzcyJ9 */\";","import { AuthService } from './../../services/auth.service';\nimport { ClientsService } from './../../services/clients.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.scss']\n})\nexport class ClientsComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  sms = true;\n  mail = false;\n  searchForm: FormGroup;\n  searchResults = false;\n  displayedColumns = ['firstName', 'lastName', 'email', 'Action'];\n  errorMessage = false;\n  retrievedUsers;\n  Users = [];\n  datasource;\n  length;\n  pageSize = 5;\n  pageSizeOptions: number[] = [5, 10];\n  constructor(\n    private userS: ClientsService,\n    private route: Router,\n    private formBuilder: FormBuilder,\n    private auth: AuthService\n  ) {\n    this.userS.getClients().subscribe((data: any) => {\n      this.retrievedUsers = data;\n      this.datasource = new MatTableDataSource(data);\n      this.length = data.length;\n      this.datasource.sort = this.sort;\n      this.datasource.paginator = this.paginator;\n    }, (error) => {\n      this.auth.checkAuthError(error);\n    });\n  }\n  showSms() {\n    this.sms = true;\n    this.mail = false;\n  }\n  showMail() {\n    this.sms = false;\n    this.mail = true;\n  }\n  details(idUser) {\n    this.route.navigate(['/client/', idUser]);\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngAfterViewInit() {\n    //\n  }\n  search() {\n    this.Users = [];\n    this.searchResults = false;\n    const letter = this.searchForm\n      .get('letter')\n      .value.toLowerCase()\n      .trim();\n    if (letter === '') {\n      this.errorMessage = true;\n    } else {\n\n      this.retrievedUsers.forEach(async user => {\n        if (user.firstName.toLowerCase().includes(letter) || (user.lastName.toLowerCase().includes(letter))) {\n          this.Users.push(user);\n          this.searchResults = true;\n        }\n      });\n      if (this.Users.length === 0) {\n        this.errorMessage = true;\n      }\n\n    }\n  }\n  initForm() {\n    this.searchForm = this.formBuilder.group({\n      letter: ['', [Validators.required]]\n    });\n    this.Users = [];\n    this.searchResults = false;\n    this.errorMessage = false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080'\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}